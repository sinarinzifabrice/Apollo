{
    "sourceFile": "imports/ui/UpdateContact.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 87,
            "patches": [
                {
                    "date": 1679317236832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1679317268410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \n+import { bridge as schema} from \"../api/resolutions/bridge\";\n+import React from 'react';\n+import gql from 'graphql-tag';\n+import { graphql } from 'react-apollo';\n+import ButtonContactList from \"./ButtonContactListe\";\n+\n+\n+\n+const createContact = gql`\n+    mutation createContact(\n+        $firstname: String, \n+        $lastname: String,\n+        $email: String!,\n+        $phone: String!,\n+        $city: String,\n+        $province: String,\n+        $country: String,\n+        $zipcode: String!,\n+        $comment1: String,\n+        $comment2: String\n+    ) {\n+        createContact(\n+            firstname: $firstname, \n+            lastname: $lastname, \n+            email: $email,\n+            phone: $phone,\n+            city: $city,\n+            province: $province,\n+            country: $country,\n+            zipcode: $zipcode,\n+            comment1: $comment1,\n+            comment2: $comment2\n+        ) {\n+            _id\n+            firstname\n+            lastname\n+            email\n+            phone\n+            city\n+            country\n+            zipcode\n+            comment1\n+            comment2\n+        }\n+    }\n+`;\n+\n+\n+\n+class ContactForm extends React.Component {\n+\n+    \n+  submitForm = (model) => {\n+      \n+    const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n+    console.log(JSON.parse(model));\n+    console.log(firstname);\n+    console.log(lastname);\n+    console.log(email);\n+    console.log(phone);\n+    console.log(city);\n+    console.log(province);\n+    console.log(zipcode);\n+    console.log(country);\n+    console.log(comment1);\n+    console.log(comment2);\n+\n+    this.props.createContact({\n+        variables: {\n+            firstname:firstname,\n+            lastname: lastname,\n+            email: email,\n+            phone: phone,\n+            city: city,\n+            province: province,\n+            zipcode: zipcode,\n+            country: country,\n+            comment1: comment1,\n+            comment2: comment2\n+        }\n+    }).catch(error =>{\n+        console.log(error);\n+    });\n+  };\n+\n+  render(){\n+\n+      return (\n+        <div>\n+            <ButtonContactList/>\n+            <AutoForm\n+                schema={schema}\n+                onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n+                showInlineError={true} // affiche les erreurs inline\n+            >\n+                <TextField name=\"firstname\"/>\n+                <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n+                <TextField name=\"email\"/>\n+                <TextField name=\"phone\"/>\n+                <TextField name=\"city\"/>\n+                <TextField name=\"province\"/>\n+                <TextField name=\"zipcode\"/>\n+                <TextField name=\"country\"/>\n+                <TextField name=\"comment1\"/>\n+                <TextField name=\"comment2\"/>\n+                <SubmitField label=\"Enregister\"/>\n+            </AutoForm>\n+        </div>\n+              \n+      );\n+  }\n+}\n+\n+\n+export default graphql(createContact, {\n+    name: \"createContact\",\n+    options: {\n+        refetchQueries: [\"Contacts\"]\n+    }\n+})(ContactForm)\n"
                },
                {
                    "date": 1679406870824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,24 @@\n import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \n import { bridge as schema} from \"../api/resolutions/bridge\";\n import React from 'react';\n import gql from 'graphql-tag';\n-import { graphql } from 'react-apollo';\n+import { graphql, useQuery } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n+import { useParams, Navigate } from \"react-router-dom\";\n \n \n \n+\n+\n+const getcontactQuery = gql`\n+    query Getcontact($contactId: ID!) {\n+        getcontact(_id: $contactId) {\n+            firstname\n+        }\n+    }\n+`;\n+\n const createContact = gql`\n     mutation createContact(\n         $firstname: String, \n         $lastname: String,\n@@ -46,13 +57,27 @@\n     }\n `;\n \n \n+const { contactId } = useParams();\n+const { loading, error, data } = useQuery(GET_CONTACT_FIRSTNAME, {\n+    variables: { contactId },\n+});\n \n+if (loading) return <p>Loading...</p>;\n+if (error) return <p>Error :(</p>;\n+\n+return <p>{data.getcontact.firstname}</p>;\n+\n+\n+\n class ContactForm extends React.Component {\n \n-    \n-  submitForm = (model) => {\n+  \n+\n+\n+\n+    submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n     console.log(JSON.parse(model));\n     console.log(firstname);\n@@ -93,9 +118,9 @@\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\"/>\n+                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n                 <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\"/>\n                 <TextField name=\"phone\"/>\n                 <TextField name=\"city\"/>\n"
                },
                {
                    "date": 1679406894462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n \n if (loading) return <p>Loading...</p>;\n if (error) return <p>Error :(</p>;\n \n-return <p>{data.getcontact.firstname}</p>;\n+// return <p>{data.getcontact.firstname}</p>;\n \n \n \n class ContactForm extends React.Component {\n"
                },
                {
                    "date": 1679406924144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n `;\n \n \n const { contactId } = useParams();\n-const { loading, error, data } = useQuery(GET_CONTACT_FIRSTNAME, {\n+const { loading, error, data } = useQuery(getcontactQuery, {\n     variables: { contactId },\n });\n \n if (loading) return <p>Loading...</p>;\n"
                },
                {
                    "date": 1679406955679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \n import { bridge as schema} from \"../api/resolutions/bridge\";\n import React from 'react';\n import gql from 'graphql-tag';\n-import { graphql, useQuery } from 'react-apollo';\n+import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams, Navigate } from \"react-router-dom\";\n+import { useQuery, gql } from '@apollo/client';\n \n \n \n \n-\n const getcontactQuery = gql`\n     query Getcontact($contactId: ID!) {\n         getcontact(_id: $contactId) {\n             firstname\n"
                },
                {
                    "date": 1679407003894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \n import { bridge as schema} from \"../api/resolutions/bridge\";\n import React from 'react';\n-import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams, Navigate } from \"react-router-dom\";\n import { useQuery, gql } from '@apollo/client';\n"
                },
                {
                    "date": 1679407034844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \n import { bridge as schema} from \"../api/resolutions/bridge\";\n import React from 'react';\n+import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams, Navigate } from \"react-router-dom\";\n-import { useQuery, gql } from '@apollo/client';\n+import { useQuery } from '@apollo/client';\n \n \n \n \n"
                },
                {
                    "date": 1679407495368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,24 +57,24 @@\n     }\n `;\n \n \n-const { contactId } = useParams();\n-const { loading, error, data } = useQuery(getcontactQuery, {\n-    variables: { contactId },\n-});\n \n-if (loading) return <p>Loading...</p>;\n-if (error) return <p>Error :(</p>;\n \n // return <p>{data.getcontact.firstname}</p>;\n \n \n \n-class ContactForm extends React.Component {\n+export const UpdateContact = () => {\n \n   \n+    const { contactId } = useParams();\n+    const { loading, error, data } = useQuery(getcontactQuery, {\n+        variables: { contactId },\n+    });\n \n+    if (loading) return <p>Loading...</p>;\n+    if (error) return <p>Error :(</p>;\n \n \n     submitForm = (model) => {\n       \n@@ -112,15 +112,16 @@\n   render(){\n \n       return (\n         <div>\n+            <p>{data.getcontact.firstname}</p>;\n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n+                <TextField name=\"firstname\"/>\n                 <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\"/>\n                 <TextField name=\"phone\"/>\n                 <TextField name=\"city\"/>\n"
                },
                {
                    "date": 1679407592215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         variables: { contactId },\n     });\n \n     if (loading) return <p>Loading...</p>;\n-    if (error) return <p>Error :(</p>;\n+    if (error) return <p>Error :</p>;\n \n \n     submitForm = (model) => {\n       \n@@ -108,9 +108,9 @@\n         console.log(error);\n     });\n   };\n \n-  render(){\n+  \n \n       return (\n         <div>\n             <p>{data.getcontact.firstname}</p>;\n@@ -134,9 +134,9 @@\n             </AutoForm>\n         </div>\n               \n       );\n-  }\n+  \n }\n \n \n export default graphql(createContact, {\n"
                },
                {
                    "date": 1679407652290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,5 +143,5 @@\n     name: \"createContact\",\n     options: {\n         refetchQueries: [\"Contacts\"]\n     }\n-})(ContactForm)\n+})(UpdateContact)\n"
                },
                {
                    "date": 1679407738308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams, Navigate } from \"react-router-dom\";\n-import { useQuery } from '@apollo/client';\n+import { useQuery } from 'react-apollo';\n \n \n \n \n"
                },
                {
                    "date": 1679407790017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\"/>\n+                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n                 <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\"/>\n                 <TextField name=\"phone\"/>\n                 <TextField name=\"city\"/>\n"
                },
                {
                    "date": 1679407888984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,17 +120,17 @@\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n                 <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n-                <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n-                <TextField name=\"email\"/>\n-                <TextField name=\"phone\"/>\n-                <TextField name=\"city\"/>\n-                <TextField name=\"province\"/>\n-                <TextField name=\"zipcode\"/>\n-                <TextField name=\"country\"/>\n-                <TextField name=\"comment1\"/>\n-                <TextField name=\"comment2\"/>\n+                <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n+                <TextField name=\"email\" value={data.getcontact.email}/>\n+                <TextField name=\"phone\" value={data.getcontact.phone}/>\n+                <TextField name=\"city\" value={data.getcontact.city}/>\n+                <TextField name=\"province\" value={data.getcontact.province}/>\n+                <TextField name=\"zipcode\" value={data.getcontact.zipcode}/>\n+                <TextField name=\"country\" value={data.getcontact.country}/>\n+                <TextField name=\"comment1\" value={data.getcontact.comment1}/>\n+                <TextField name=\"comment2\" value={data.getcontact.comment2}/>\n                 <SubmitField label=\"Enregister\"/>\n             </AutoForm>\n         </div>\n               \n"
                },
                {
                    "date": 1679408111490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,18 @@\n const getcontactQuery = gql`\n     query Getcontact($contactId: ID!) {\n         getcontact(_id: $contactId) {\n             firstname\n+            lastname\n+            email\n+            phone\n+            city\n+            province\n+            country\n+            zipcode\n+            comment1\n+            comment2\n+\n         }\n     }\n `;\n \n"
                },
                {
                    "date": 1679408155875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n   \n \n       return (\n         <div>\n-            <p>{data.getcontact.firstname}</p>;\n+            \n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n"
                },
                {
                    "date": 1679410905088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,11 @@\n         }\n     }\n `;\n \n-const createContact = gql`\n-    mutation createContact(\n+const updateContact = gql`\n+    mutation updateContact(\n+        $id: String\n         $firstname: String, \n         $lastname: String,\n         $email: String!,\n         $phone: String!,\n@@ -40,9 +41,10 @@\n         $zipcode: String!,\n         $comment1: String,\n         $comment2: String\n     ) {\n-        createContact(\n+        updateContact(\n+            _id: $id,\n             firstname: $firstname, \n             lastname: $lastname, \n             email: $email,\n             phone: $phone,\n@@ -100,9 +102,9 @@\n     console.log(country);\n     console.log(comment1);\n     console.log(comment2);\n \n-    this.props.createContact({\n+    this.props.updateContact({\n         variables: {\n             firstname:firstname,\n             lastname: lastname,\n             email: email,\n@@ -148,10 +150,10 @@\n   \n }\n \n \n-export default graphql(createContact, {\n-    name: \"createContact\",\n+export default graphql(updateContact, {\n+    name: \"updateContact\",\n     options: {\n         refetchQueries: [\"Contacts\"]\n     }\n })(UpdateContact)\n"
                },
                {
                    "date": 1679410918372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n                 <TextField name=\"zipcode\" value={data.getcontact.zipcode}/>\n                 <TextField name=\"country\" value={data.getcontact.country}/>\n                 <TextField name=\"comment1\" value={data.getcontact.comment1}/>\n                 <TextField name=\"comment2\" value={data.getcontact.comment2}/>\n-                <SubmitField label=\"Enregister\"/>\n+                <SubmitField label=\"Modifier\"/>\n             </AutoForm>\n         </div>\n               \n       );\n"
                },
                {
                    "date": 1679411717734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n+                <TextField name=\"firstname\" initialValue={data.getcontact.firstname}/>\n                 <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n"
                },
                {
                    "date": 1679411780922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" initialValue={data.getcontact.firstname}/>\n+                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n                 <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n"
                },
                {
                    "date": 1679412364035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n+                <TextField name=\"firstname\" onChange={data.getcontact.firstname}/>\n                 <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n"
                },
                {
                    "date": 1679412455432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" onChange={data.getcontact.firstname}/>\n+                <TextField name=\"firstname\" initialValue=\"true\" value={data.getcontact.firstname}/>\n                 <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n"
                },
                {
                    "date": 1679414242399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,12 @@\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams, Navigate } from \"react-router-dom\";\n import { useQuery } from 'react-apollo';\n+import React, { useState } from 'react';\n \n \n \n-\n const getcontactQuery = gql`\n     query Getcontact($contactId: ID!) {\n         getcontact(_id: $contactId) {\n             firstname\n@@ -86,9 +86,21 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n+    const [formValues, setFormValues] = useState({\n+        firstname: '',\n+        lastname: '',\n+        email: ''\n+      });\n \n+    const handleFieldChange = (fieldName, value) => {\n+    setFormValues({\n+        ...formValues,\n+        [fieldName]: value\n+    });\n+    };\n+\n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n     console.log(JSON.parse(model));\n@@ -128,12 +140,13 @@\n             \n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n+                onChange={handleFormChange}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" initialValue=\"true\" value={data.getcontact.firstname}/>\n+                <TextField name=\"firstname\" value={data.getcontact.firstname} onChange={(value) => handleFieldChange('firstname', value)}/>\n                 <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n"
                },
                {
                    "date": 1679414267889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams, Navigate } from \"react-router-dom\";\n import { useQuery } from 'react-apollo';\n-import React, { useState } from 'react';\n+import { useState } from 'react';\n \n \n \n const getcontactQuery = gql`\n"
                },
                {
                    "date": 1679415033746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,8 @@\n             \n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n-                onChange={handleFormChange}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n                 <TextField name=\"firstname\" value={data.getcontact.firstname} onChange={(value) => handleFieldChange('firstname', value)}/>\n"
                },
                {
                    "date": 1679415274651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,21 +86,10 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    const [formValues, setFormValues] = useState({\n-        firstname: '',\n-        lastname: '',\n-        email: ''\n-      });\n+   \n \n-    const handleFieldChange = (fieldName, value) => {\n-    setFormValues({\n-        ...formValues,\n-        [fieldName]: value\n-    });\n-    };\n-\n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n     console.log(JSON.parse(model));\n@@ -143,9 +132,9 @@\n                 schema={schema}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" value={data.getcontact.firstname} onChange={(value) => handleFieldChange('firstname', value)}/>\n+                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n                 <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n"
                },
                {
                    "date": 1679417951339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,12 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-   \n+    const [model, setModel] = useState(data.getcontact);\n+    const handleModelChange = (key, value) => {\n+        setModel({ ...model, [key]: value });\n+      };\n \n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n@@ -129,12 +132,13 @@\n             \n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n+                onChange={handleModelChange}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" value={data.getcontact.firstname}/>\n+                <TextField name=\"firstname\" value={data.getcontact.firstname} />\n                 <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n"
                },
                {
                    "date": 1679418093426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,12 +86,12 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    const [model, setModel] = useState(data.getcontact);\n-    const handleModelChange = (key, value) => {\n-        setModel({ ...model, [key]: value });\n-      };\n+    // const [model, setModel] = useState(data.getcontact);\n+    // const handleModelChange = (key, value) => {\n+    //     setModel({ ...model, [key]: value });\n+    //   };\n \n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n"
                },
                {
                    "date": 1679418113016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n             \n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n-                onChange={handleModelChange}\n+                // onChange={handleModelChange}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n                 <TextField name=\"firstname\" value={data.getcontact.firstname} />\n"
                },
                {
                    "date": 1679418238728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,13 +133,14 @@\n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n                 // onChange={handleModelChange}\n+                model = {data.getcontact}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\" value={data.getcontact.firstname} />\n-                <TextField name=\"lastname\" value={data.getcontact.lastname} placeholder=\"Entrez votre prénom\" />\n+                <TextField name=\"firstname\"  />\n+                <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n                 <TextField name=\"email\" value={data.getcontact.email}/>\n                 <TextField name=\"phone\" value={data.getcontact.phone}/>\n                 <TextField name=\"city\" value={data.getcontact.city}/>\n                 <TextField name=\"province\" value={data.getcontact.province}/>\n"
                },
                {
                    "date": 1679418327135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,12 +86,9 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    // const [model, setModel] = useState(data.getcontact);\n-    // const handleModelChange = (key, value) => {\n-    //     setModel({ ...model, [key]: value });\n-    //   };\n+    \n \n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n"
                },
                {
                    "date": 1679418387691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,23 +129,22 @@\n             \n             <ButtonContactList/>\n             <AutoForm\n                 schema={schema}\n-                // onChange={handleModelChange}\n                 model = {data.getcontact}\n                 onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                 showInlineError={true} // affiche les erreurs inline\n             >\n-                <TextField name=\"firstname\"  />\n+                <TextField name=\"firstname\" />\n                 <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n-                <TextField name=\"email\" value={data.getcontact.email}/>\n-                <TextField name=\"phone\" value={data.getcontact.phone}/>\n-                <TextField name=\"city\" value={data.getcontact.city}/>\n-                <TextField name=\"province\" value={data.getcontact.province}/>\n-                <TextField name=\"zipcode\" value={data.getcontact.zipcode}/>\n-                <TextField name=\"country\" value={data.getcontact.country}/>\n-                <TextField name=\"comment1\" value={data.getcontact.comment1}/>\n-                <TextField name=\"comment2\" value={data.getcontact.comment2}/>\n+                <TextField name=\"email\"/>\n+                <TextField name=\"phone\"/>\n+                <TextField name=\"city\"/>\n+                <TextField name=\"province\"/>\n+                <TextField name=\"zipcode\"/>\n+                <TextField name=\"country\"/>\n+                <TextField name=\"comment1\"/>\n+                <TextField name=\"comment2\"/>\n                 <SubmitField label=\"Modifier\"/>\n             </AutoForm>\n         </div>\n               \n"
                },
                {
                    "date": 1679419525384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,14 @@\n import React from 'react';\n import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n-import { useParams, Navigate } from \"react-router-dom\";\n+import { useParams } from \"react-router-dom\";\n import { useQuery } from 'react-apollo';\n-import { useState } from 'react';\n \n \n \n+\n const getcontactQuery = gql`\n     query Getcontact($contactId: ID!) {\n         getcontact(_id: $contactId) {\n             firstname\n"
                },
                {
                    "date": 1679420295134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n `;\n \n const updateContact = gql`\n     mutation updateContact(\n-        $id: String\n+        $id: ID!\n         $firstname: String, \n         $lastname: String,\n         $email: String!,\n         $phone: String!,\n"
                },
                {
                    "date": 1679422032904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,12 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    \n+    const [updateContact] = useMutation(updateContact, {\n+        variables: { id: project.id, name, description, status },\n+        refetchQueries: [{ query: GET_PROJECT, variables: { id: project.id } }],\n+      });\n \n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n"
                },
                {
                    "date": 1679422198089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n \n \n \n \n-// return <p>{data.getcontact.firstname}</p>;\n \n \n \n export const UpdateContact = () => {\n@@ -86,12 +85,9 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    const [updateContact] = useMutation(updateContact, {\n-        variables: { id: project.id, name, description, status },\n-        refetchQueries: [{ query: GET_PROJECT, variables: { id: project.id } }],\n-      });\n+    \n \n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n"
                },
                {
                    "date": 1679422668686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,24 +71,24 @@\n \n \n \n \n-\n-\n-\n-export const UpdateContact = () => {\n-\n-  \n-    const { contactId } = useParams();\n+const { contactId } = useParams();\n     const { loading, error, data } = useQuery(getcontactQuery, {\n         variables: { contactId },\n     });\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n+\n+class UpdateContact extends React.Component {\n+\n+  \n     \n \n+    \n+\n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n     console.log(JSON.parse(model));\n@@ -120,9 +120,9 @@\n         console.log(error);\n     });\n   };\n \n-  \n+  render(){\n \n       return (\n         <div>\n             \n@@ -147,9 +147,9 @@\n             </AutoForm>\n         </div>\n               \n       );\n-  \n+      }\n }\n \n \n export default graphql(updateContact, {\n"
                },
                {
                    "date": 1679422742869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,14 +72,14 @@\n \n \n \n const { contactId } = useParams();\n-    const { loading, error, data } = useQuery(getcontactQuery, {\n-        variables: { contactId },\n-    });\n+const { loading, error, data } = useQuery(getcontactQuery, {\n+    variables: { contactId },\n+});\n \n-    if (loading) return <p>Loading...</p>;\n-    if (error) return <p>Error :</p>;\n+if (loading) return <p>Loading...</p>;\n+if (error) return <p>Error :</p>;\n \n \n class UpdateContact extends React.Component {\n \n"
                },
                {
                    "date": 1679422826525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,13 +82,8 @@\n \n \n class UpdateContact extends React.Component {\n \n-  \n-    \n-\n-    \n-\n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n     console.log(JSON.parse(model));\n"
                },
                {
                    "date": 1679423296741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,17 +71,10 @@\n \n \n \n \n-const { contactId } = useParams();\n-const { loading, error, data } = useQuery(getcontactQuery, {\n-    variables: { contactId },\n-});\n \n-if (loading) return <p>Loading...</p>;\n-if (error) return <p>Error :</p>;\n \n-\n class UpdateContact extends React.Component {\n \n     submitForm = (model) => {\n       \n@@ -117,8 +110,16 @@\n   };\n \n   render(){\n \n+        const { contactId } = useParams();\n+        const { loading, error, data } = useQuery(getcontactQuery, {\n+            variables: { contactId },\n+        });\n+\n+        if (loading) return <p>Loading...</p>;\n+        if (error) return <p>Error :</p>;\n+\n       return (\n         <div>\n             \n             <ButtonContactList/>\n"
                },
                {
                    "date": 1679424083712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,10 +73,11 @@\n \n \n \n \n-class UpdateContact extends React.Component {\n \n+export const UpdateContact = () => {\n+\n     submitForm = (model) => {\n       \n     const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n     console.log(JSON.parse(model));\n@@ -108,9 +109,9 @@\n         console.log(error);\n     });\n   };\n \n-  render(){\n+  \n \n         const { contactId } = useParams();\n         const { loading, error, data } = useQuery(getcontactQuery, {\n             variables: { contactId },\n@@ -143,9 +144,9 @@\n             </AutoForm>\n         </div>\n               \n       );\n-      }\n+      \n }\n \n \n export default graphql(updateContact, {\n"
                },
                {
                    "date": 1679424882978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n     console.log(country);\n     console.log(comment1);\n     console.log(comment2);\n \n-    this.props.updateContact({\n+    updateContact({\n         variables: {\n             firstname:firstname,\n             lastname: lastname,\n             email: email,\n"
                },
                {
                    "date": 1679426661913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,37 +78,43 @@\n export const UpdateContact = () => {\n \n     submitForm = (model) => {\n       \n-    const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n-    console.log(JSON.parse(model));\n-    console.log(firstname);\n-    console.log(lastname);\n-    console.log(email);\n-    console.log(phone);\n-    console.log(city);\n-    console.log(province);\n-    console.log(zipcode);\n-    console.log(country);\n-    console.log(comment1);\n-    console.log(comment2);\n+        const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n+        console.log(JSON.parse(model));\n+        console.log(firstname);\n+        console.log(lastname);\n+        console.log(email);\n+        console.log(phone);\n+        console.log(city);\n+        console.log(province);\n+        console.log(zipcode);\n+        console.log(country);\n+        console.log(comment1);\n+        console.log(comment2);\n+    \n \n-    updateContact({\n-        variables: {\n-            firstname:firstname,\n-            lastname: lastname,\n-            email: email,\n-            phone: phone,\n-            city: city,\n-            province: province,\n-            zipcode: zipcode,\n-            country: country,\n-            comment1: comment1,\n-            comment2: comment2\n-        }\n-    }).catch(error =>{\n-        console.log(error);\n-    });\n+        // const [updateProject] = useMutation(UPDATE_PROJECT, {\n+        //     variables: { id: project.id, name, description, status },\n+        //     refetchQueries: [{ query: GET_PROJECT, variables: { id: project.id } }],\n+        // });\n+\n+        updateContact({\n+            variables: {\n+                firstname:firstname,\n+                lastname: lastname,\n+                email: email,\n+                phone: phone,\n+                city: city,\n+                province: province,\n+                zipcode: zipcode,\n+                country: country,\n+                comment1: comment1,\n+                comment2: comment2\n+            }\n+        }).catch(error =>{\n+            console.log(error);\n+        });\n   };\n \n   \n \n@@ -116,8 +122,10 @@\n         const { loading, error, data } = useQuery(getcontactQuery, {\n             variables: { contactId },\n         });\n \n+        \n+\n         if (loading) return <p>Loading...</p>;\n         if (error) return <p>Error :</p>;\n \n       return (\n"
                },
                {
                    "date": 1679427333887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,9 @@\n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n         console.log(JSON.parse(model));\n+        console.log($contactId);\n         console.log(firstname);\n         console.log(lastname);\n         console.log(email);\n         console.log(phone);\n@@ -92,9 +93,9 @@\n         console.log(comment1);\n         console.log(comment2);\n     \n \n-        // const [updateProject] = useMutation(UPDATE_PROJECT, {\n+        // const [updateProject] = useMutation(updateContact, {\n         //     variables: { id: project.id, name, description, status },\n         //     refetchQueries: [{ query: GET_PROJECT, variables: { id: project.id } }],\n         // });\n \n"
                },
                {
                    "date": 1679427385801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n         console.log(JSON.parse(model));\n-        console.log($contactId);\n+        console.log(contactId);\n         console.log(firstname);\n         console.log(lastname);\n         console.log(email);\n         console.log(phone);\n"
                },
                {
                    "date": 1679427481878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,12 +70,21 @@\n `;\n \n \n \n+const { contactId } = useParams();\n+const { loading, error, data } = useQuery(getcontactQuery, {\n+    variables: { contactId },\n+});\n \n \n \n+if (loading) return <p>Loading...</p>;\n+if (error) return <p>Error :</p>;\n \n+\n+\n+\n export const UpdateContact = () => {\n \n     submitForm = (model) => {\n       \n@@ -118,18 +127,9 @@\n   };\n \n   \n \n-        const { contactId } = useParams();\n-        const { loading, error, data } = useQuery(getcontactQuery, {\n-            variables: { contactId },\n-        });\n \n-        \n-\n-        if (loading) return <p>Loading...</p>;\n-        if (error) return <p>Error :</p>;\n-\n       return (\n         <div>\n             \n             <ButtonContactList/>\n"
                },
                {
                    "date": 1679427525730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,23 +70,25 @@\n `;\n \n \n \n-const { contactId } = useParams();\n-const { loading, error, data } = useQuery(getcontactQuery, {\n+\n+\n+\n+\n+export const UpdateContact = () => {\n+   \n+    const { contactId } = useParams();\n+    const { loading, error, data } = useQuery(getcontactQuery, {\n     variables: { contactId },\n-});\n+    });\n \n \n \n if (loading) return <p>Loading...</p>;\n if (error) return <p>Error :</p>;\n \n \n-\n-\n-export const UpdateContact = () => {\n-\n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n         console.log(JSON.parse(model));\n"
                },
                {
                    "date": 1679427698185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,12 +104,21 @@\n         console.log(comment1);\n         console.log(comment2);\n     \n \n-        // const [updateProject] = useMutation(updateContact, {\n-        //     variables: { id: project.id, name, description, status },\n-        //     refetchQueries: [{ query: GET_PROJECT, variables: { id: project.id } }],\n-        // });\n+        const [updateProject] = useMutation(updateContact, {\n+            variables: { _id: contactId, firstname:firstname,\n+                lastname: lastname,\n+                email: email,\n+                phone: phone,\n+                city: city,\n+                province: province,\n+                zipcode: zipcode,\n+                country: country,\n+                comment1: comment1,\n+                comment2: comment2 },\n+            refetchQueries: [{ query: getcontactQuery, variables: { _id: contactId } }],\n+        });\n \n         updateContact({\n             variables: {\n                 firstname:firstname,\n"
                },
                {
                    "date": 1679427979706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n         console.log(comment1);\n         console.log(comment2);\n     \n \n-        const [updateProject] = useMutation(updateContact, {\n+        const [updatecontact] = useMutation(updateContact, {\n             variables: { _id: contactId, firstname:firstname,\n                 lastname: lastname,\n                 email: email,\n                 phone: phone,\n@@ -118,24 +118,26 @@\n                 comment2: comment2 },\n             refetchQueries: [{ query: getcontactQuery, variables: { _id: contactId } }],\n         });\n \n-        updateContact({\n-            variables: {\n-                firstname:firstname,\n-                lastname: lastname,\n-                email: email,\n-                phone: phone,\n-                city: city,\n-                province: province,\n-                zipcode: zipcode,\n-                country: country,\n-                comment1: comment1,\n-                comment2: comment2\n-            }\n-        }).catch(error =>{\n-            console.log(error);\n-        });\n+        updatecontact(contactId, firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 );\n+\n+        // updateContact({\n+        //     variables: {\n+        //         firstname:firstname,\n+        //         lastname: lastname,\n+        //         email: email,\n+        //         phone: phone,\n+        //         city: city,\n+        //         province: province,\n+        //         zipcode: zipcode,\n+        //         country: country,\n+        //         comment1: comment1,\n+        //         comment2: comment2\n+        //     }\n+        // }).catch(error =>{\n+        //     console.log(error);\n+        // });\n   };\n \n   \n \n"
                },
                {
                    "date": 1679429389953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,40 +104,25 @@\n         console.log(comment1);\n         console.log(comment2);\n     \n \n-        const [updatecontact] = useMutation(updateContact, {\n-            variables: { _id: contactId, firstname:firstname,\n+\n+        this.props.updateContact({\n+            variables: {\n+                firstname:firstname,\n                 lastname: lastname,\n                 email: email,\n                 phone: phone,\n                 city: city,\n                 province: province,\n                 zipcode: zipcode,\n                 country: country,\n                 comment1: comment1,\n-                comment2: comment2 },\n-            refetchQueries: [{ query: getcontactQuery, variables: { _id: contactId } }],\n+                comment2: comment2\n+            }\n+        }).catch(error =>{\n+            console.log(error);\n         });\n-\n-        updatecontact(contactId, firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 );\n-\n-        // updateContact({\n-        //     variables: {\n-        //         firstname:firstname,\n-        //         lastname: lastname,\n-        //         email: email,\n-        //         phone: phone,\n-        //         city: city,\n-        //         province: province,\n-        //         zipcode: zipcode,\n-        //         country: country,\n-        //         comment1: comment1,\n-        //         comment2: comment2\n-        //     }\n-        // }).catch(error =>{\n-        //     console.log(error);\n-        // });\n   };\n \n   \n \n"
                },
                {
                    "date": 1679429753262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams } from \"react-router-dom\";\n-import { useQuery } from 'react-apollo';\n+import { useQuery, useMutation } from 'react-apollo';\n \n \n \n \n@@ -103,26 +103,42 @@\n         console.log(country);\n         console.log(comment1);\n         console.log(comment2);\n     \n-\n-\n-        this.props.updateContact({\n-            variables: {\n-                firstname:firstname,\n-                lastname: lastname,\n-                email: email,\n-                phone: phone,\n-                city: city,\n-                province: province,\n-                zipcode: zipcode,\n-                country: country,\n-                comment1: comment1,\n-                comment2: comment2\n-            }\n+        \n+        const { loading, error, data } = useMutation(updateContact, {\n+        variables: { \n+            contactId,\n+            firstname,\n+            lastname,\n+            email,\n+            phone,\n+            city,\n+            country,\n+            zipcode,\n+            comment1,\n+            comment2\n+         },\n         }).catch(error =>{\n             console.log(error);\n         });\n+\n+        // this.props.updateContact({\n+        //     variables: {\n+        //         firstname:firstname,\n+        //         lastname: lastname,\n+        //         email: email,\n+        //         phone: phone,\n+        //         city: city,\n+        //         province: province,\n+        //         zipcode: zipcode,\n+        //         country: country,\n+        //         comment1: comment1,\n+        //         comment2: comment2\n+        //     }\n+        // }).catch(error =>{\n+        //     console.log(error);\n+        // });\n   };\n \n   \n \n"
                },
                {
                    "date": 1679429943665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,24 +121,9 @@\n         }).catch(error =>{\n             console.log(error);\n         });\n \n-        // this.props.updateContact({\n-        //     variables: {\n-        //         firstname:firstname,\n-        //         lastname: lastname,\n-        //         email: email,\n-        //         phone: phone,\n-        //         city: city,\n-        //         province: province,\n-        //         zipcode: zipcode,\n-        //         country: country,\n-        //         comment1: comment1,\n-        //         comment2: comment2\n-        //     }\n-        // }).catch(error =>{\n-        //     console.log(error);\n-        // });\n+     \n   };\n \n   \n \n"
                },
                {
                    "date": 1679430241901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n             country,\n             zipcode,\n             comment1,\n             comment2\n-         },\n+         }\n         }).catch(error =>{\n             console.log(error);\n         });\n \n"
                },
                {
                    "date": 1679430796574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,11 +83,14 @@\n     });\n \n \n \n-if (loading) return <p>Loading...</p>;\n-if (error) return <p>Error :</p>;\n+    if (loading) return <p>Loading...</p>;\n+    if (error) return <p>Error :</p>;\n \n+    const [updateContactMutation] = useMutation(updateContact, {\n+        refetchQueries: [\"Contacts\"]\n+    });\n \n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n@@ -104,21 +107,21 @@\n         console.log(comment1);\n         console.log(comment2);\n     \n         \n-        const { loading, error, data } = useMutation(updateContact, {\n-        variables: { \n-            contactId,\n-            firstname,\n-            lastname,\n-            email,\n-            phone,\n-            city,\n-            country,\n-            zipcode,\n-            comment1,\n-            comment2\n-         }\n+        updateContactMutation({\n+            variables: { \n+                id: contactId,\n+                firstname,\n+                lastname,\n+                email,\n+                phone,\n+                city,\n+                country,\n+                zipcode,\n+                comment1,\n+                comment2\n+             },\n         }).catch(error =>{\n             console.log(error);\n         });\n \n"
                },
                {
                    "date": 1679430849286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,9 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    const [updateContactMutation] = useMutation(updateContact, {\n-        refetchQueries: [\"Contacts\"]\n-    });\n+    const [updateContactMutation] = useMutation(updateContact);\n \n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n"
                },
                {
                    "date": 1679431120620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    const [updateContactMutation] = useMutation(updateContact);\n+   \n \n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n@@ -103,10 +103,13 @@\n         console.log(zipcode);\n         console.log(country);\n         console.log(comment1);\n         console.log(comment2);\n-    \n         \n+        const [updateContactMutation] = useMutation(updateContact, {\n+            refetchQueries: [\"Contacts\"]\n+        });\n+        \n         updateContactMutation({\n             variables: { \n                 id: contactId,\n                 firstname,\n"
                },
                {
                    "date": 1679431967289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \n+import { bridge as schema} from \"../api/resolutions/bridge\";\n+import React from 'react';\n+import gql from 'graphql-tag';\n+import { graphql } from 'react-apollo';\n+import ButtonContactList from \"./ButtonContactListe\";\n+import { useParams } from \"react-router-dom\";\n+import { useQuery, useMutation } from 'react-apollo';\n+\n+\n+\n+\n+const getcontactQuery = gql`\n+    query Getcontact($contactId: ID!) {\n+        getcontact(_id: $contactId) {\n+            firstname\n+            lastname\n+            email\n+            phone\n+            city\n+            province\n+            country\n+            zipcode\n+            comment1\n+            comment2\n+\n+        }\n+    }\n+`;\n+\n+const updateContact = gql`\n+    mutation updateContact(\n+        $id: ID!\n+        $firstname: String, \n+        $lastname: String,\n+        $email: String!,\n+        $phone: String!,\n+        $city: String,\n+        $province: String,\n+        $country: String,\n+        $zipcode: String!,\n+        $comment1: String,\n+        $comment2: String\n+    ) {\n+        updateContact(\n+            _id: $id,\n+            firstname: $firstname, \n+            lastname: $lastname, \n+            email: $email,\n+            phone: $phone,\n+            city: $city,\n+            province: $province,\n+            country: $country,\n+            zipcode: $zipcode,\n+            comment1: $comment1,\n+            comment2: $comment2\n+        ) {\n+            _id\n+            firstname\n+            lastname\n+            email\n+            phone\n+            city\n+            country\n+            zipcode\n+            comment1\n+            comment2\n+        }\n+    }\n+`;\n+\n+\n+\n+\n+\n+\n+\n+export const UpdateContact = () => {\n+   \n+    const { contactId } = useParams();\n+    const { loading, error, data } = useQuery(getcontactQuery, {\n+    variables: { contactId },\n+    });\n+\n+\n+\n+    if (loading) return <p>Loading...</p>;\n+    if (error) return <p>Error :</p>;\n+\n+   \n+\n+    submitForm = (model) => {\n+      \n+        const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n+        console.log(JSON.parse(model));\n+        console.log(contactId);\n+        console.log(firstname);\n+        console.log(lastname);\n+        console.log(email);\n+        console.log(phone);\n+        console.log(city);\n+        console.log(province);\n+        console.log(zipcode);\n+        console.log(country);\n+        console.log(comment1);\n+        console.log(comment2);\n+        \n+        const [updateContactMutation] = useMutation(updateContact);\n+        \n+        updateContactMutation({\n+            variables: { \n+                id: contactId,\n+                firstname,\n+                lastname,\n+                email,\n+                phone,\n+                city,\n+                country,\n+                zipcode,\n+                comment1,\n+                comment2\n+             },\n+        }).catch(error =>{\n+            console.log(error);\n+        });\n+\n+     \n+  };\n+\n+  \n+\n+\n+      return (\n+        <div>\n+            \n+            <ButtonContactList/>\n+            <AutoForm\n+                schema={schema}\n+                model = {data.getcontact}\n+                onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n+                showInlineError={true} // affiche les erreurs inline\n+            >\n+                <TextField name=\"firstname\" />\n+                <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n+                <TextField name=\"email\"/>\n+                <TextField name=\"phone\"/>\n+                <TextField name=\"city\"/>\n+                <TextField name=\"province\"/>\n+                <TextField name=\"zipcode\"/>\n+                <TextField name=\"country\"/>\n+                <TextField name=\"comment1\"/>\n+                <TextField name=\"comment2\"/>\n+                <SubmitField label=\"Modifier\"/>\n+            </AutoForm>\n+        </div>\n+              \n+      );\n+      \n+}\n+\n+\n+export default graphql(updateContact, {\n+    name: \"updateContact\",\n+    options: {\n+        refetchQueries: [\"Contacts\"]\n+    }\n+})(UpdateContact)\n"
                },
                {
                    "date": 1679492872412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n         console.log(country);\n         console.log(comment1);\n         console.log(comment2);\n         \n-        const [updateContactMutation] = useMutation(updateContact);\n+        const [updateContactMutation, { data, loading, error }] = useMutation(updateContact);\n         \n         updateContactMutation({\n             variables: { \n                 id: contactId,\n@@ -164,173 +164,4 @@\n     options: {\n         refetchQueries: [\"Contacts\"]\n     }\n })(UpdateContact)\n-import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \n-import { bridge as schema} from \"../api/resolutions/bridge\";\n-import React from 'react';\n-import gql from 'graphql-tag';\n-import { graphql } from 'react-apollo';\n-import ButtonContactList from \"./ButtonContactListe\";\n-import { useParams } from \"react-router-dom\";\n-import { useQuery, useMutation } from 'react-apollo';\n-\n-\n-\n-\n-const getcontactQuery = gql`\n-    query Getcontact($contactId: ID!) {\n-        getcontact(_id: $contactId) {\n-            firstname\n-            lastname\n-            email\n-            phone\n-            city\n-            province\n-            country\n-            zipcode\n-            comment1\n-            comment2\n-\n-        }\n-    }\n-`;\n-\n-const updateContact = gql`\n-    mutation updateContact(\n-        $id: ID!\n-        $firstname: String, \n-        $lastname: String,\n-        $email: String!,\n-        $phone: String!,\n-        $city: String,\n-        $province: String,\n-        $country: String,\n-        $zipcode: String!,\n-        $comment1: String,\n-        $comment2: String\n-    ) {\n-        updateContact(\n-            _id: $id,\n-            firstname: $firstname, \n-            lastname: $lastname, \n-            email: $email,\n-            phone: $phone,\n-            city: $city,\n-            province: $province,\n-            country: $country,\n-            zipcode: $zipcode,\n-            comment1: $comment1,\n-            comment2: $comment2\n-        ) {\n-            _id\n-            firstname\n-            lastname\n-            email\n-            phone\n-            city\n-            country\n-            zipcode\n-            comment1\n-            comment2\n-        }\n-    }\n-`;\n-\n-\n-\n-\n-\n-\n-\n-export const UpdateContact = () => {\n-   \n-    const { contactId } = useParams();\n-    const { loading, error, data } = useQuery(getcontactQuery, {\n-    variables: { contactId },\n-    });\n-\n-\n-\n-    if (loading) return <p>Loading...</p>;\n-    if (error) return <p>Error :</p>;\n-\n-   \n-\n-    submitForm = (model) => {\n-      \n-        const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n-        console.log(JSON.parse(model));\n-        console.log(contactId);\n-        console.log(firstname);\n-        console.log(lastname);\n-        console.log(email);\n-        console.log(phone);\n-        console.log(city);\n-        console.log(province);\n-        console.log(zipcode);\n-        console.log(country);\n-        console.log(comment1);\n-        console.log(comment2);\n-        \n-        const [updateContactMutation] = useMutation(updateContact, {\n-            refetchQueries: [\"Contacts\"]\n-        });\n-        \n-        updateContactMutation({\n-            variables: { \n-                id: contactId,\n-                firstname,\n-                lastname,\n-                email,\n-                phone,\n-                city,\n-                country,\n-                zipcode,\n-                comment1,\n-                comment2\n-             },\n-        }).catch(error =>{\n-            console.log(error);\n-        });\n-\n-     \n-  };\n-\n-  \n-\n-\n-      return (\n-        <div>\n-            \n-            <ButtonContactList/>\n-            <AutoForm\n-                schema={schema}\n-                model = {data.getcontact}\n-                onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n-                showInlineError={true} // affiche les erreurs inline\n-            >\n-                <TextField name=\"firstname\" />\n-                <TextField name=\"lastname\" placeholder=\"Entrez votre prénom\" />\n-                <TextField name=\"email\"/>\n-                <TextField name=\"phone\"/>\n-                <TextField name=\"city\"/>\n-                <TextField name=\"province\"/>\n-                <TextField name=\"zipcode\"/>\n-                <TextField name=\"country\"/>\n-                <TextField name=\"comment1\"/>\n-                <TextField name=\"comment2\"/>\n-                <SubmitField label=\"Modifier\"/>\n-            </AutoForm>\n-        </div>\n-              \n-      );\n-      \n-}\n-\n-\n-export default graphql(updateContact, {\n-    name: \"updateContact\",\n-    options: {\n-        refetchQueries: [\"Contacts\"]\n-    }\n-})(UpdateContact)\n"
                },
                {
                    "date": 1679494738070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         }\n     }\n `;\n \n-const updateContact = gql`\n+const UPDATEContact = gql`\n     mutation updateContact(\n         $id: ID!\n         $firstname: String, \n         $lastname: String,\n@@ -104,9 +104,9 @@\n         console.log(country);\n         console.log(comment1);\n         console.log(comment2);\n         \n-        const [updateContactMutation, { data, loading, error }] = useMutation(updateContact);\n+        const [updateContactMutation] = useMutation(UPDATEContact,{refetchQueries: mutationResult => [{query: getcontactQuery}]});\n         \n         updateContactMutation({\n             variables: { \n                 id: contactId,\n"
                },
                {
                    "date": 1679494812262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n       \n }\n \n \n-export default graphql(updateContact, {\n+export default graphql(UPDATEContact, {\n     name: \"updateContact\",\n     options: {\n         refetchQueries: [\"Contacts\"]\n     }\n"
                },
                {
                    "date": 1679496279039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,10 +158,10 @@\n       \n }\n \n \n-export default graphql(UPDATEContact, {\n-    name: \"updateContact\",\n-    options: {\n-        refetchQueries: [\"Contacts\"]\n-    }\n-})(UpdateContact)\n+// export  graphql(UPDATEContact, {\n+//     name: \"updateContact\",\n+//     options: {\n+//         refetchQueries: [\"Contacts\"]\n+//     }\n+// })(UpdateContact)\n"
                },
                {
                    "date": 1679496326981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,10 +158,10 @@\n       \n }\n \n \n-// export  graphql(UPDATEContact, {\n-//     name: \"updateContact\",\n-//     options: {\n-//         refetchQueries: [\"Contacts\"]\n-//     }\n-// })(UpdateContact)\n+export default graphql(UPDATEContact, {\n+    name: \"updateContact\",\n+    options: {\n+        refetchQueries: [\"Contacts\"]\n+    }\n+})(UpdateContact)\n"
                },
                {
                    "date": 1679498184369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,11 +104,11 @@\n         console.log(country);\n         console.log(comment1);\n         console.log(comment2);\n         \n-        const [updateContactMutation] = useMutation(UPDATEContact,{refetchQueries: mutationResult => [{query: getcontactQuery}]});\n+        const [updateContact] = useMutation(UPDATEContact,{refetchQueries: mutationResult => [{query: getcontactQuery}]});\n         \n-        updateContactMutation({\n+        updateContact({\n             variables: { \n                 id: contactId,\n                 firstname,\n                 lastname,\n"
                },
                {
                    "date": 1679498378088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,12 +104,26 @@\n         console.log(country);\n         console.log(comment1);\n         console.log(comment2);\n         \n-        const [updateContact] = useMutation(UPDATEContact,{refetchQueries: mutationResult => [{query: getcontactQuery}]});\n-        \n-        updateContact({\n-            variables: { \n+        const [updateContact] = useMutation(UPDATEContact);\n+        // const [updateUser, { dataUpdate, loadingUpdate, errorUpdate }] = useMutation(UPDATE_USER);\n+\n+        updateContact({variables: { id: contactId,\n+            firstname,\n+            lastname,\n+            email,\n+            phone,\n+            city,\n+            country,\n+            zipcode,\n+            comment1,\n+            comment2 },onCompleted : (data)=> {\n+\t\t\tsetFormSend(true);\n+\t\t\trefetch();\n+\t\t}});\n+        // updateContact({\n+        //     variables: { \n                 id: contactId,\n                 firstname,\n                 lastname,\n                 email,\n@@ -118,12 +132,12 @@\n                 country,\n                 zipcode,\n                 comment1,\n                 comment2\n-             },\n-        }).catch(error =>{\n-            console.log(error);\n-        });\n+        //      },\n+        // }).catch(error =>{\n+        //     console.log(error);\n+        // });\n \n      \n   };\n \n"
                },
                {
                    "date": 1679498417950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,10 +117,10 @@\n             country,\n             zipcode,\n             comment1,\n             comment2 },onCompleted : (data)=> {\n-\t\t\tsetFormSend(true);\n-\t\t\trefetch();\n+\t\t\tconsole.log(data);\n+\t\t\t\n \t\t}});\n         // updateContact({\n         //     variables: { \n                 id: contactId,\n"
                },
                {
                    "date": 1679498602156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,17 +94,9 @@\n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n         console.log(JSON.parse(model));\n         console.log(contactId);\n         console.log(firstname);\n-        console.log(lastname);\n-        console.log(email);\n-        console.log(phone);\n-        console.log(city);\n-        console.log(province);\n-        console.log(zipcode);\n-        console.log(country);\n-        console.log(comment1);\n-        console.log(comment2);\n+       \n         \n         const [updateContact] = useMutation(UPDATEContact);\n         // const [updateUser, { dataUpdate, loadingUpdate, errorUpdate }] = useMutation(UPDATE_USER);\n \n"
                },
                {
                    "date": 1679498622444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,18 +114,18 @@\n \t\t\t\n \t\t}});\n         // updateContact({\n         //     variables: { \n-                id: contactId,\n-                firstname,\n-                lastname,\n-                email,\n-                phone,\n-                city,\n-                country,\n-                zipcode,\n-                comment1,\n-                comment2\n+                // id: contactId,\n+                // firstname,\n+                // lastname,\n+                // email,\n+                // phone,\n+                // city,\n+                // country,\n+                // zipcode,\n+                // comment1,\n+                // comment2\n         //      },\n         // }).catch(error =>{\n         //     console.log(error);\n         // });\n"
                },
                {
                    "date": 1679498648357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,11 @@\n             comment1,\n             comment2 },onCompleted : (data)=> {\n \t\t\tconsole.log(data);\n \t\t\t\n-\t\t}});\n+\t\t}}).catch(error =>{\n+                console.log(error);\n+            });\n         // updateContact({\n         //     variables: { \n                 // id: contactId,\n                 // firstname,\n"
                },
                {
                    "date": 1679498943542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams } from \"react-router-dom\";\n-import { useQuery, useMutation } from 'react-apollo';\n+import { useQuery, useMutation } from '@apollo/client';\n \n \n \n \n"
                },
                {
                    "date": 1679499004593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams } from \"react-router-dom\";\n-import { useQuery, useMutation } from '@apollo/client';\n+import { useQuery, useMutation } from 'react-apollo';\n \n \n \n \n"
                },
                {
                    "date": 1679499245588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \n \n \n \n-export const UpdateContact = () => {\n+export default const UpdateContact = () => {\n    \n     const { contactId } = useParams();\n     const { loading, error, data } = useQuery(getcontactQuery, {\n     variables: { contactId },\n@@ -166,10 +166,10 @@\n       \n }\n \n \n-export default graphql(UPDATEContact, {\n-    name: \"updateContact\",\n-    options: {\n-        refetchQueries: [\"Contacts\"]\n-    }\n-})(UpdateContact)\n+// export default graphql(UPDATEContact, {\n+//     name: \"updateContact\",\n+//     options: {\n+//         refetchQueries: [\"Contacts\"]\n+//     }\n+// })(UpdateContact)\n"
                },
                {
                    "date": 1679499366612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams } from \"react-router-dom\";\n-import { useQuery, useMutation } from 'react-apollo';\n+import { useQuery, useMutation } from '@apollo/client';\n \n \n \n \n@@ -74,9 +74,9 @@\n \n \n \n \n-export default const UpdateContact = () => {\n+export default UpdateContact = () => {\n    \n     const { contactId } = useParams();\n     const { loading, error, data } = useQuery(getcontactQuery, {\n     variables: { contactId },\n"
                },
                {
                    "date": 1679499647775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import gql from 'graphql-tag';\n import { graphql } from 'react-apollo';\n import ButtonContactList from \"./ButtonContactListe\";\n import { useParams } from \"react-router-dom\";\n-import { useQuery, useMutation } from '@apollo/client';\n+import { useQuery, useMutation } from 'react-apollo';\n \n \n \n \n"
                },
                {
                    "date": 1679500432931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,26 +96,49 @@\n         console.log(contactId);\n         console.log(firstname);\n        \n         \n-        const [updateContact] = useMutation(UPDATEContact);\n-        // const [updateUser, { dataUpdate, loadingUpdate, errorUpdate }] = useMutation(UPDATE_USER);\n-\n-        updateContact({variables: { id: contactId,\n+        // const [updateContact] = useMutation(UPDATEContact);\n+        const [updateContact] = useMutation(UPDATEContact,\n+            {\n+                variables: { id: contactId,\n+                    firstname,\n+                    lastname,\n+                    email,\n+                    phone,\n+                    city,\n+                    country,\n+                    zipcode,\n+                    comment1,\n+                    comment2 }});\n+                    \n+        updateContact(\n+            contactId, \n             firstname,\n             lastname,\n             email,\n             phone,\n             city,\n             country,\n             zipcode,\n             comment1,\n-            comment2 },onCompleted : (data)=> {\n-\t\t\tconsole.log(data);\n+            comment2\n+        );            \n+        // updateContact({variables: { id: contactId,\n+        //     firstname,\n+        //     lastname,\n+        //     email,\n+        //     phone,\n+        //     city,\n+        //     country,\n+        //     zipcode,\n+        //     comment1,\n+        //     comment2 },onCompleted : (data)=> {\n+\t\t// \tconsole.log(data);\n \t\t\t\n-\t\t}}).catch(error =>{\n-                console.log(error);\n-            });\n+\t\t// }}).catch(error =>{\n+        //         console.log(error);\n+        //     });\n         // updateContact({\n         //     variables: { \n                 // id: contactId,\n                 // firstname,\n"
                },
                {
                    "date": 1679512261302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n                     country,\n                     zipcode,\n                     comment1,\n                     comment2 }});\n-                    \n+\n         updateContact(\n             contactId, \n             firstname,\n             lastname,\n@@ -121,9 +121,10 @@\n             country,\n             zipcode,\n             comment1,\n             comment2\n-        );            \n+        );    \n+        console.log(\"la fonction \"+updateContact);        \n         // updateContact({variables: { id: contactId,\n         //     firstname,\n         //     lastname,\n         //     email,\n"
                },
                {
                    "date": 1679514881170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n                     country,\n                     zipcode,\n                     comment1,\n                     comment2 }});\n-\n+        \n         updateContact(\n             contactId, \n             firstname,\n             lastname,\n@@ -122,9 +122,20 @@\n             zipcode,\n             comment1,\n             comment2\n         );    \n-        console.log(\"la fonction \"+updateContact);        \n+        console.log( useMutation(UPDATEContact,\n+            {\n+                variables: { id: contactId,\n+                    firstname,\n+                    lastname,\n+                    email,\n+                    phone,\n+                    city,\n+                    country,\n+                    zipcode,\n+                    comment1,\n+                    comment2 }}));        \n         // updateContact({variables: { id: contactId,\n         //     firstname,\n         //     lastname,\n         //     email,\n"
                },
                {
                    "date": 1679516193849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,10 +201,4 @@\n       \n }\n \n \n-// export default graphql(UPDATEContact, {\n-//     name: \"updateContact\",\n-//     options: {\n-//         refetchQueries: [\"Contacts\"]\n-//     }\n-// })(UpdateContact)\n"
                },
                {
                    "date": 1679516205868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,20 +122,9 @@\n             zipcode,\n             comment1,\n             comment2\n         );    \n-        console.log( useMutation(UPDATEContact,\n-            {\n-                variables: { id: contactId,\n-                    firstname,\n-                    lastname,\n-                    email,\n-                    phone,\n-                    city,\n-                    country,\n-                    zipcode,\n-                    comment1,\n-                    comment2 }}));        \n+               \n         // updateContact({variables: { id: contactId,\n         //     firstname,\n         //     lastname,\n         //     email,\n"
                },
                {
                    "date": 1679516372356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,8 +106,9 @@\n                     email,\n                     phone,\n                     city,\n                     country,\n+                    province,\n                     zipcode,\n                     comment1,\n                     comment2 }});\n         \n"
                },
                {
                    "date": 1679516682519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,12 +70,24 @@\n `;\n \n \n \n+const [updateContact] = useMutation(UPDATEContact,\n+    {\n+        variables: { id: contactId,\n+            firstname,\n+            lastname,\n+            email,\n+            phone,\n+            city,\n+            country,\n+            province,\n+            zipcode,\n+            comment1,\n+            comment2 }});\n \n \n \n-\n export default UpdateContact = () => {\n    \n     const { contactId } = useParams();\n     const { loading, error, data } = useQuery(getcontactQuery, {\n@@ -97,22 +109,10 @@\n         console.log(firstname);\n        \n         \n         // const [updateContact] = useMutation(UPDATEContact);\n-        const [updateContact] = useMutation(UPDATEContact,\n-            {\n-                variables: { id: contactId,\n-                    firstname,\n-                    lastname,\n-                    email,\n-                    phone,\n-                    city,\n-                    country,\n-                    province,\n-                    zipcode,\n-                    comment1,\n-                    comment2 }});\n         \n+        \n         updateContact(\n             contactId, \n             firstname,\n             lastname,\n"
                },
                {
                    "date": 1679516761357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,21 +70,8 @@\n `;\n \n \n \n-const [updateContact] = useMutation(UPDATEContact,\n-    {\n-        variables: { id: contactId,\n-            firstname,\n-            lastname,\n-            email,\n-            phone,\n-            city,\n-            country,\n-            province,\n-            zipcode,\n-            comment1,\n-            comment2 }});\n \n \n \n export default UpdateContact = () => {\n@@ -98,9 +85,13 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-   \n+    const [updateProject] = useMutation(UPDATE_PROJECT, {\n+        variables: { id: project.id, name, description, status },\n+        refetchQueries: [{ query: GET_PROJECT, variables: { id: project.id } }],\n+      });\n+    \n \n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n"
                },
                {
                    "date": 1679516800214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,13 +85,22 @@\n \n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n-    const [updateProject] = useMutation(UPDATE_PROJECT, {\n-        variables: { id: project.id, name, description, status },\n-        refetchQueries: [{ query: GET_PROJECT, variables: { id: project.id } }],\n-      });\n-    \n+   \n+    const [updateContact] = useMutation(UPDATEContact,\n+        {\n+            variables: { id: contactId,\n+                firstname,\n+                lastname,\n+                email,\n+                phone,\n+                city,\n+                country,\n+                province,\n+                zipcode,\n+                comment1,\n+                comment2 }});\n \n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n"
                },
                {
                    "date": 1679516878174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,11 +108,9 @@\n         console.log(contactId);\n         console.log(firstname);\n        \n         \n-        // const [updateContact] = useMutation(UPDATEContact);\n         \n-        \n         updateContact(\n             contactId, \n             firstname,\n             lastname,\n@@ -124,39 +122,9 @@\n             comment1,\n             comment2\n         );    \n                \n-        // updateContact({variables: { id: contactId,\n-        //     firstname,\n-        //     lastname,\n-        //     email,\n-        //     phone,\n-        //     city,\n-        //     country,\n-        //     zipcode,\n-        //     comment1,\n-        //     comment2 },onCompleted : (data)=> {\n-\t\t// \tconsole.log(data);\n-\t\t\t\n-\t\t// }}).catch(error =>{\n-        //         console.log(error);\n-        //     });\n-        // updateContact({\n-        //     variables: { \n-                // id: contactId,\n-                // firstname,\n-                // lastname,\n-                // email,\n-                // phone,\n-                // city,\n-                // country,\n-                // zipcode,\n-                // comment1,\n-                // comment2\n-        //      },\n-        // }).catch(error =>{\n-        //     console.log(error);\n-        // });\n+       \n \n      \n   };\n \n"
                },
                {
                    "date": 1679516898074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,31 +86,31 @@\n     if (loading) return <p>Loading...</p>;\n     if (error) return <p>Error :</p>;\n \n    \n-    const [updateContact] = useMutation(UPDATEContact,\n-        {\n-            variables: { id: contactId,\n-                firstname,\n-                lastname,\n-                email,\n-                phone,\n-                city,\n-                country,\n-                province,\n-                zipcode,\n-                comment1,\n-                comment2 }});\n+    \n \n     submitForm = (model) => {\n       \n         const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n         console.log(JSON.parse(model));\n         console.log(contactId);\n         console.log(firstname);\n        \n+        const [updateContact] = useMutation(UPDATEContact,\n+            {\n+                variables: { id: contactId,\n+                    firstname,\n+                    lastname,\n+                    email,\n+                    phone,\n+                    city,\n+                    country,\n+                    province,\n+                    zipcode,\n+                    comment1,\n+                    comment2 }});\n         \n-        \n         updateContact(\n             contactId, \n             firstname,\n             lastname,\n"
                },
                {
                    "date": 1679516988188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,20 +109,9 @@\n                     zipcode,\n                     comment1,\n                     comment2 }});\n         \n-        updateContact(\n-            contactId, \n-            firstname,\n-            lastname,\n-            email,\n-            phone,\n-            city,\n-            country,\n-            zipcode,\n-            comment1,\n-            comment2\n-        );    \n+        updateContact(contactId, firstname, lastname, email, phone, city, country, zipcode, comment1, comment2);    \n                \n        \n \n      \n"
                },
                {
                    "date": 1679517056638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,12 +110,9 @@\n                     comment1,\n                     comment2 }});\n         \n         updateContact(contactId, firstname, lastname, email, phone, city, country, zipcode, comment1, comment2);    \n-               \n-       \n-\n-     \n+      \n   };\n \n   \n \n"
                },
                {
                    "date": 1679517120337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,22 +95,22 @@\n         console.log(JSON.parse(model));\n         console.log(contactId);\n         console.log(firstname);\n        \n-        const [updateContact] = useMutation(UPDATEContact,\n-            {\n-                variables: { id: contactId,\n-                    firstname,\n-                    lastname,\n-                    email,\n-                    phone,\n-                    city,\n-                    country,\n-                    province,\n-                    zipcode,\n-                    comment1,\n-                    comment2 }});\n-        \n+        // const [updateContact] = useMutation(UPDATEContact,\n+        //     {\n+        //         variables: { id: contactId,\n+        //             firstname,\n+        //             lastname,\n+        //             email,\n+        //             phone,\n+        //             city,\n+        //             country,\n+        //             province,\n+        //             zipcode,\n+        //             comment1,\n+        //             comment2 }});\n+        const [updateContact] = console.log(\"test d'appel\");\n         updateContact(contactId, firstname, lastname, email, phone, city, country, zipcode, comment1, comment2);    \n       \n   };\n \n"
                },
                {
                    "date": 1679517208439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n         //             province,\n         //             zipcode,\n         //             comment1,\n         //             comment2 }});\n-        const [updateContact] = console.log(\"test d'appel\");\n+        const [updateContact] = useMutation(UPDATEContact);\n         updateContact(contactId, firstname, lastname, email, phone, city, country, zipcode, comment1, comment2);    \n       \n   };\n \n"
                }
            ],
            "date": 1679317236832,
            "name": "Commit-0",
            "content": ""
        }
    ]
}