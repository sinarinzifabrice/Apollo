{
    "sourceFile": "imports/ui/UpdateContact.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1679316651111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1679316651111,
            "name": "Commit-0",
            "content": "import { AutoForm, TextField, SubmitField } from \"uniforms-mui\"; \nimport { bridge as schema} from \"../api/resolutions/bridge\";\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\nimport ButtonContactList from \"./ButtonContactListe\";\nimport { useParams, Navigate } from \"react-router-dom\";\n\n\nconst createContact = gql`\n    mutation createContact(\n        $firstname: String, \n        $lastname: String,\n        $email: String!,\n        $phone: String!,\n        $city: String,\n        $province: String,\n        $country: String,\n        $zipcode: String!,\n        $comment1: String,\n        $comment2: String\n    ) {\n        createContact(\n            firstname: $firstname, \n            lastname: $lastname, \n            email: $email,\n            phone: $phone,\n            city: $city,\n            province: $province,\n            country: $country,\n            zipcode: $zipcode,\n            comment1: $comment1,\n            comment2: $comment2\n        ) {\n            _id\n            firstname\n            lastname\n            email\n            phone\n            city\n            country\n            zipcode\n            comment1\n            comment2\n        }\n    }\n`;\n\nconst { contactId } = useParams();\n\nclass UpdateContact extends React.Component {\n\n    \n    \n    submitForm = (model) => {\n      \n    const { firstname, lastname, email, phone, city, province, zipcode, country, comment1, comment2 } = JSON.parse(model);  \n    console.log(JSON.parse(model));\n    console.log(firstname);\n    console.log(lastname);\n    console.log(email);\n    console.log(phone);\n    console.log(city);\n    console.log(province);\n    console.log(zipcode);\n    console.log(country);\n    console.log(comment1);\n    console.log(comment2);\n\n    this.props.createContact({\n        variables: {\n            firstname:firstname,\n            lastname: lastname,\n            email: email,\n            phone: phone,\n            city: city,\n            province: province,\n            zipcode: zipcode,\n            country: country,\n            comment1: comment1,\n            comment2: comment2\n        }\n    }).catch(error =>{\n        console.log(error);\n    });\n  };\n\n  render(){\n\n      return (\n        <div>\n            \n            <ButtonContactList/>\n            <AutoForm\n                schema={schema}\n                onSubmit={(model) => this.submitForm(JSON.stringify(model))}\n                showInlineError={true} // affiche les erreurs inline\n            >\n                <TextField name=\"firstname\"/>\n                <TextField name=\"lastname\" placeholder=\"Entrez votre prÃ©nom\" />\n                <TextField name=\"email\"/>\n                <TextField name=\"phone\"/>\n                <TextField name=\"city\"/>\n                <TextField name=\"province\"/>\n                <TextField name=\"zipcode\"/>\n                <TextField name=\"country\"/>\n                <TextField name=\"comment1\"/>\n                <TextField name=\"comment2\"/>\n                <SubmitField label=\"Enregister\"/>\n            </AutoForm>\n        </div>\n              \n      );\n  }\n}\n\n\nexport default graphql(createContact, {\n    name: \"createContact\",\n    options: {\n        refetchQueries: [\"Contacts\"]\n    }\n})(ContactForm)\n"
        }
    ]
}