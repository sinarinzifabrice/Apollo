{
    "sourceFile": "imports/startup/server/register-api.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 91,
            "patches": [
                {
                    "date": 1676579990962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1676580112611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,2 @@\n-import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n\\ No newline at end of file\n+import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n+\n"
                },
                {
                    "date": 1676649337247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,35 @@\n+\n+import { ApolloServer } from \"@apollo/server\";\n+import { makeExecutableSchema } from \"@graphql-tools/schema\";\n+import { startStandaloneServer } from '@apollo/server/standalone';\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n \n+\n+// it points to the query \"hi\" \n+// and wants a string as answer\n+const typeDefs = `\n+type Query {\n+    hi: String\n+}\n+`;\n+\n+//it's where we put the query \n+//like Meteor.method\n+const resolver = {\n+    Query: {\n+        hi() {\n+            return \"Hello Fabrice\";\n+        }\n+    }\n+}\n+\n+const schema = makeExecutableSchema({\n+    typeDefs: typeDefs,\n+    resolvers : resolver\n+})\n+\n+const server = new ApolloServer({ schema });\n+\n+const { url } = await startStandaloneServer(server);\n+\n+console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676650405448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,15 @@\n import { startStandaloneServer } from '@apollo/server/standalone';\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n \n \n+const testSchema =  `\n+    type Query {\n+        hi: String\n+    }\n+`;\n+\n+\n // it points to the query \"hi\" \n // and wants a string as answer\n const typeDefs = `\n type Query {\n"
                },
                {
                    "date": 1676650463332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,12 @@\n \n \n // it points to the query \"hi\" \n // and wants a string as answer\n-const typeDefs = `\n-type Query {\n-    hi: String\n-}\n-`;\n+const typeDefs = [\n+    testSchema,\n+    ResolutionsSchema\n+];\n \n //it's where we put the query \n //like Meteor.method\n const resolver = {\n"
                },
                {
                    "date": 1676650513350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,11 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n \n \n const testSchema =  `\n-    type Query {\n-        hi: String\n-    }\n+type Query {\n+    hi: String\n+}\n `;\n \n \n // it points to the query \"hi\" \n"
                },
                {
                    "date": 1676651765652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,19 +13,24 @@\n \n \n // it points to the query \"hi\" \n // and wants a string as answer\n-const typeDefs = [\n-    testSchema,\n-    ResolutionsSchema\n-];\n+const typeDefs = [testSchema, ResolutionsSchema];\n \n //it's where we put the query \n //like Meteor.method\n const resolver = {\n     Query: {\n         hi() {\n             return \"Hello Fabrice\";\n+        },\n+        resolutions(){\n+            return [\n+                {\n+                    _id: \"sdfsdfgwer\",\n+                    name: \"Get stuff done\"\n+                }\n+            ]\n         }\n     }\n }\n \n"
                },
                {
                    "date": 1676651947655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n \n const testSchema =  `\n type Query {\n     hi: String\n+    resolutions: [Resolution]\n }\n `;\n \n \n"
                },
                {
                    "date": 1676652354690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n                 {\n                     _id: \"sdfsdfgwer\",\n                     name: \"Get stuff done\"\n                 }\n-            ]\n+            ];\n         }\n     }\n }\n \n"
                },
                {
                    "date": 1676653855410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,12 @@\n             return [\n                 {\n                     _id: \"sdfsdfgwer\",\n                     name: \"Get stuff done\"\n+                },\n+                {\n+                    _id: \"rrrrrrrrrrrrrr\",\n+                    name: \"gains weight\"\n                 }\n             ];\n         }\n     }\n"
                },
                {
                    "date": 1676664774467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,11 @@\n import { ApolloServer } from \"@apollo/server\";\n import { makeExecutableSchema } from \"@graphql-tools/schema\";\n import { startStandaloneServer } from '@apollo/server/standalone';\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n+import ResolutionsResolvers from '../../api/resolutions/resolvers';\n+import merge from \"lodash/merge\";\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n@@ -22,20 +23,8 @@\n const resolver = {\n     Query: {\n         hi() {\n             return \"Hello Fabrice\";\n-        },\n-        resolutions(){\n-            return [\n-                {\n-                    _id: \"sdfsdfgwer\",\n-                    name: \"Get stuff done\"\n-                },\n-                {\n-                    _id: \"rrrrrrrrrrrrrr\",\n-                    name: \"gains weight\"\n-                }\n-            ];\n         }\n     }\n }\n \n"
                },
                {
                    "date": 1676665357548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,16 +19,18 @@\n const typeDefs = [testSchema, ResolutionsSchema];\n \n //it's where we put the query \n //like Meteor.method\n-const resolver = {\n+const testResolver = {\n     Query: {\n         hi() {\n             return \"Hello Fabrice\";\n         }\n     }\n-}\n+};\n \n+const resolvers = merge(testResolver, ResolutionsResolvers);\n+\n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n     resolvers : resolver\n })\n"
                },
                {
                    "date": 1676665378354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n-    resolvers : resolver\n+    resolvers : resolvers\n })\n \n const server = new ApolloServer({ schema });\n \n"
                },
                {
                    "date": 1676922375224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,15 @@\n import { startStandaloneServer } from '@apollo/server/standalone';\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n+import express from 'express';\n \n+\n+\n+const app = express();\n+\n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n@@ -36,7 +42,13 @@\n })\n \n const server = new ApolloServer({ schema });\n \n-const { url } = await startStandaloneServer(server);\n+server.applyMiddleware({ app });\n \n\\ No newline at end of file\n-console.log(`ğŸš€ Server ready at ${url}`);\n+app.listen({ port: 4000 }, () =>\n+  console.log(`ğŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n+);\n+\n+// const { url } = await startStandaloneServer(server);\n+\n+// console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676922582573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,10 @@\n import { startStandaloneServer } from '@apollo/server/standalone';\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n-import express from 'express';\n \n \n-\n-const app = express();\n-\n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n@@ -42,13 +37,8 @@\n })\n \n const server = new ApolloServer({ schema });\n \n-server.applyMiddleware({ app });\n \n-app.listen({ port: 4000 }, () =>\n-  console.log(`ğŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n-);\n+const { url } = await startStandaloneServer(server);\n \n-// const { url } = await startStandaloneServer(server);\n-\n\\ No newline at end of file\n-// console.log(`ğŸš€ Server ready at ${url}`);\n+console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676923767481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n-import { ApolloServer } from \"@apollo/server\";\n+import { createApolloServer } from \"meteor/apollo\";\n import { makeExecutableSchema } from \"@graphql-tools/schema\";\n import { startStandaloneServer } from '@apollo/server/standalone';\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n@@ -35,10 +35,10 @@\n     typeDefs: typeDefs,\n     resolvers : resolvers\n })\n \n-const server = new ApolloServer({ schema });\n+// const server = new ApolloServer({ schema });\n+createApolloServer({schema});\n \n+// const { url } = await startStandaloneServer(server);\n \n\\ No newline at end of file\n-const { url } = await startStandaloneServer(server);\n-\n-console.log(`ğŸš€ Server ready at ${url}`);\n+// console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676923827126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     resolvers : resolvers\n })\n \n // const server = new ApolloServer({ schema });\n-createApolloServer({schema});\n+createApolloServer({ schema });\n \n // const { url } = await startStandaloneServer(server);\n \n // console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676924539487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n-import { createApolloServer } from \"meteor/apollo\";\n+import { ApolloServer } from \"@apollo/server\";\n import { makeExecutableSchema } from \"@graphql-tools/schema\";\n import { startStandaloneServer } from '@apollo/server/standalone';\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n@@ -35,10 +35,10 @@\n     typeDefs: typeDefs,\n     resolvers : resolvers\n })\n \n-// const server = new ApolloServer({ schema });\n-createApolloServer({ schema });\n+const server = new ApolloServer({ schema });\n \n-// const { url } = await startStandaloneServer(server);\n \n\\ No newline at end of file\n-// console.log(`ğŸš€ Server ready at ${url}`);\n+const { url } = await startStandaloneServer(server);\n+\n+console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676924932264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,53 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n+import { expressMiddleware } from '@apollo/server/express4';\n+import { ApolloServerPluginDrainHttpServer } from '@apollo/server/plugin/drainHttpServer';\n+import express from 'express';\n+import http from 'http';\n+import cors from 'cors';\n+import bodyParser from 'body-parser';\n \n+interface MyContext {\n+    token?: string;\n+  }\n+\n+\n+// Required logic for integrating with Express\n+const app = express();\n+\n+// Our httpServer handles incoming requests to our Express app.\n+// Below, we tell Apollo Server to \"drain\" this httpServer,\n+// enabling our servers to shut down gracefully.\n+const httpServer = http.createServer(app);\n+\n+\n+// Ensure we wait for our server to start\n+await server.start();\n+\n+// Set up our Express middleware to handle CORS, body parsing,\n+// and our expressMiddleware function.\n+app.use(\n+  '/',\n+  cors<cors.CorsRequest>(),\n+  bodyParser.json(),\n+  // expressMiddleware accepts the same arguments:\n+  // an Apollo Server instance and optional configuration options\n+  expressMiddleware(server, {\n+    context: async ({ req }) => ({ token: req.headers.token }),\n+  }),\n+);\n+\n+\n+// Modified server startup\n+await new Promise<void>((resolve) => httpServer.listen({ port: 4000 }, resolve));\n+console.log(`ğŸš€ Server ready at http://localhost:4000/`);\n+\n+\n+\n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n@@ -33,12 +77,14 @@\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n     resolvers : resolvers\n+    \n })\n \n-const server = new ApolloServer({ schema });\n+const server = new ApolloServer({ schema,   plugins: [ApolloServerPluginDrainHttpServer({ httpServer })],\n+});\n \n \n\\ No newline at end of file\n-const { url } = await startStandaloneServer(server);\n+// const { url } = await startStandaloneServer(server);\n \n-console.log(`ğŸš€ Server ready at ${url}`);\n+// console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676925150514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n // Set up our Express middleware to handle CORS, body parsing,\n // and our expressMiddleware function.\n app.use(\n   '/',\n-  cors<cors.CorsRequest>(),\n+  cors<cors.CorsRequest>,\n   bodyParser.json(),\n   // expressMiddleware accepts the same arguments:\n   // an Apollo Server instance and optional configuration options\n   expressMiddleware(server, {\n"
                },
                {
                    "date": 1676925471150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,53 +5,10 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-import { expressMiddleware } from '@apollo/server/express4';\n-import { ApolloServerPluginDrainHttpServer } from '@apollo/server/plugin/drainHttpServer';\n-import express from 'express';\n-import http from 'http';\n-import cors from 'cors';\n-import bodyParser from 'body-parser';\n \n-interface MyContext {\n-    token?: string;\n-  }\n \n-\n-// Required logic for integrating with Express\n-const app = express();\n-\n-// Our httpServer handles incoming requests to our Express app.\n-// Below, we tell Apollo Server to \"drain\" this httpServer,\n-// enabling our servers to shut down gracefully.\n-const httpServer = http.createServer(app);\n-\n-\n-// Ensure we wait for our server to start\n-await server.start();\n-\n-// Set up our Express middleware to handle CORS, body parsing,\n-// and our expressMiddleware function.\n-app.use(\n-  '/',\n-  cors<cors.CorsRequest>,\n-  bodyParser.json(),\n-  // expressMiddleware accepts the same arguments:\n-  // an Apollo Server instance and optional configuration options\n-  expressMiddleware(server, {\n-    context: async ({ req }) => ({ token: req.headers.token }),\n-  }),\n-);\n-\n-\n-// Modified server startup\n-await new Promise<void>((resolve) => httpServer.listen({ port: 4000 }, resolve));\n-console.log(`ğŸš€ Server ready at http://localhost:4000/`);\n-\n-\n-\n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n@@ -77,14 +34,12 @@\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n     resolvers : resolvers\n-    \n })\n \n-const server = new ApolloServer({ schema,   plugins: [ApolloServerPluginDrainHttpServer({ httpServer })],\n-});\n+const server = new ApolloServer({ schema });\n \n \n-// const { url } = await startStandaloneServer(server);\n+const { url } = await startStandaloneServer(server);\n\\ No newline at end of file\n \n-// console.log(`ğŸš€ Server ready at ${url}`);\n+console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676929115043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n+//hi\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1676929175386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import merge from \"lodash/merge\";\n \n //hi\n \n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1676929229932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n import merge from \"lodash/merge\";\n \n //hi\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1676929260742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n //hi\n+// \n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1676990246487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,10 +37,30 @@\n     typeDefs: typeDefs,\n     resolvers : resolvers\n })\n \n-const server = new ApolloServer({ schema });\n+const server = new ApolloServer({ \n+    schema,\n+    context: async ({ req }) => ({\n+        user: await getUser(req.headers.authorization)\n+    })\n\\ No newline at end of file\n+});\n \n+export async function startApolloServer() {\n+    await server.start();\n+    const app = WebApp.connectHandlers;\n+  \n+    server.applyMiddleware({\n+      app,\n+      cors: true\n+    });\n+}\n \n-const { url } = await startStandaloneServer(server);\n \n-console.log(`ğŸš€ Server ready at ${url}`);\n+try {\n+    startApolloServer().then();\n+  } catch (e) {\n+    console.error(e.reason);\n+}\n+// const { url } = await startStandaloneServer(server);\n+\n+// console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676990747725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         user: await getUser(req.headers.authorization)\n     })\n });\n \n-export async function startApolloServer() {\n+async function startApolloServer() {\n     await server.start();\n     const app = WebApp.connectHandlers;\n   \n     server.applyMiddleware({\n"
                },
                {
                    "date": 1676991561269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,28 +39,11 @@\n })\n \n const server = new ApolloServer({ \n     schema,\n-    context: async ({ req }) => ({\n-        user: await getUser(req.headers.authorization)\n-    })\n+    context: async ({ req }) => ({ token: req.headers.token })\n });\n \n-async function startApolloServer() {\n-    await server.start();\n-    const app = WebApp.connectHandlers;\n-  \n-    server.applyMiddleware({\n-      app,\n-      cors: true\n-    });\n-}\n \n+const { url } = await startStandaloneServer(server);\n \n-try {\n-    startApolloServer().then();\n-  } catch (e) {\n-    console.error(e.reason);\n-}\n-// const { url } = await startStandaloneServer(server);\n\\ No newline at end of file\n-\n-// console.log(`ğŸš€ Server ready at ${url}`);\n+console.log(`ğŸš€ Server ready at ${url}`);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676991622505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,12 +37,9 @@\n     typeDefs: typeDefs,\n     resolvers : resolvers\n })\n \n-const server = new ApolloServer({ \n-    schema,\n-    context: async ({ req }) => ({ token: req.headers.token })\n-});\n+const server = new ApolloServer({ schema });\n \n \n const { url } = await startStandaloneServer(server);\n \n"
                },
                {
                    "date": 1676998284110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n         }\n     }\n };\n \n+\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n"
                },
                {
                    "date": 1676998456311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n         }\n     }\n };\n \n+// \n \n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n"
                },
                {
                    "date": 1677001757999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n+    contacts:[Contact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1677001860891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,10 @@\n         }\n     }\n };\n \n-// \n \n+\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n"
                },
                {
                    "date": 1677076763549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n //hi\n-// \n \n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1677076781017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import merge from \"lodash/merge\";\n \n //hi\n \n+// \n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1677076872823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,10 @@\n         }\n     }\n };\n \n+// \n \n-\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n"
                },
                {
                    "date": 1677084683925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n import merge from \"lodash/merge\";\n \n //hi\n \n-// \n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1677084695775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,8 @@\n         }\n     }\n };\n \n-// \n \n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n"
                },
                {
                    "date": 1677084742423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,9 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-//hi\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1677085008486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n+//helo\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1677091007475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n             return \"Hello Fabrice\";\n         }\n     }\n };\n+//\n \n-\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n"
                },
                {
                    "date": 1677091975284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,8 @@\n             return \"Hello Fabrice\";\n         }\n     }\n };\n-//\n \n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n"
                },
                {
                    "date": 1677095084993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,10 @@\n         }\n     }\n };\n \n+// ter\n+\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n"
                },
                {
                    "date": 1677095198440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n     }\n };\n \n // ter\n+// \n \n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n"
                },
                {
                    "date": 1677096257558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,10 @@\n         }\n     }\n };\n \n-// ter\n-// \n \n+\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n"
                },
                {
                    "date": 1677096476879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,11 @@\n         }\n     }\n };\n \n+// sf\n+// sdf\n \n-\n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n     typeDefs: typeDefs,\n"
                },
                {
                    "date": 1677099339545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,8 @@\n         }\n     }\n };\n \n-// sf\n-// sdf\n \n const resolvers = merge(testResolver, ResolutionsResolvers);\n \n const schema = makeExecutableSchema({\n"
                },
                {
                    "date": 1677100171542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-//helo\n+//helolo\n+// sdfg\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1677270151548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,8 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-//helolo\n-// sdfg\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1677270341049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n+// nullable\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1677510068235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-// nullable\n \n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1677510083022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n+// test\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1677517892384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-\n+// sdf\n // test\n \n const testSchema =  `\n type Query {\n"
                },
                {
                    "date": 1678737082977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,9 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-// sdf\n-// test\n+// mis a jour\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1678802700515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,11 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-// mis a jour\n \n+// resolver\n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679317073417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// resolver\n+// test\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1679323568004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import merge from \"lodash/merge\";\n \n \n // test\n+// nouveau\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1679327733076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n+    getcontact:[GetContact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679328394727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,9 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// test\n-// nouveau\n+// res\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1679328423545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,11 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// res\n+// get contact\n \n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679328737055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,9 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// get contact\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679328746412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-\n+// new\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679329298566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// new\n+\n+\n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679329511024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact:[GetContact]\n+    getContact(_id: ID!): [GetContact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679329927807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getContact(_id: ID!): [GetContact]\n+    getContact(_id: String!): [GetContact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679329941620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getContact(_id: String!): [GetContact]\n+    getContact(_id: String!): GetContact\n }\n `;\n \n \n"
                },
                {
                    "date": 1679329952795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getContact(_id: String!): GetContact\n+    \n }\n `;\n \n \n"
                },
                {
                    "date": 1679330014637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    \n+    getcontact : [GetContact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679338648577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n import merge from \"lodash/merge\";\n \n \n \n+// getcontact\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679338767668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n import merge from \"lodash/merge\";\n \n \n \n-// getcontact\n \n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679338855749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n import merge from \"lodash/merge\";\n \n \n \n+// sdf\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679339240603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,10 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n+// tst\n \n-// sdf\n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679339860942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,11 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// tst\n \n+// kjbu\n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679340362234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact : [GetContact]\n+    getcontact(_,args) : [GetContact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679341469607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact(_,args) : [GetContact]\n+    getcontact : [GetContact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679341486569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,10 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n+// nur\n \n-// kjbu\n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679341535721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// nur\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1679341545583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,10 @@\n import merge from \"lodash/merge\";\n \n \n \n+// mjkuh\n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679343481204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,10 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n+// vret\n \n-// mjkuh\n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679344325245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact : [GetContact]\n+    getcontact(_id: ID!) : [Contact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679344355819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact(_id: ID!) : [Contact]\n+    getcontact(_id: ID!) : Contact\n }\n `;\n \n \n"
                },
                {
                    "date": 1679344493918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact(_id: ID!) : Contact\n+    getcontact(_id: ID!) : [Contact]\n }\n `;\n \n \n"
                },
                {
                    "date": 1679344516779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact(_id: ID!) : [Contact]\n+    getcontact(_id: ID!) : Contact!\n }\n `;\n \n \n"
                },
                {
                    "date": 1679344764828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,10 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n+// vre\n \n-// vret\n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679344869512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    getcontact(_id: ID!) : Contact!\n+    \n }\n `;\n \n \n"
                },
                {
                    "date": 1679344883471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n-// vre\n \n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679345478220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n type Query {\n     hi: String\n     resolutions: [Resolution]\n     contacts:[Contact]\n-    \n+    getcontact(_id: ID!): Contact\n }\n `;\n \n \n"
                },
                {
                    "date": 1679345564334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,10 @@\n import merge from \"lodash/merge\";\n \n \n \n+// fre\n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679410567925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import merge from \"lodash/merge\";\n \n \n \n-// fre\n+// update\n \n const testSchema =  `\n type Query {\n     hi: String\n"
                },
                {
                    "date": 1679419817982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,10 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n+// mis a jour \n \n-// update\n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679432390595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,11 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// mis a jour \n+// contact\n \n+\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                },
                {
                    "date": 1679433229693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,10 @@\n import ResolutionsResolvers from '../../api/resolutions/resolvers';\n import merge from \"lodash/merge\";\n \n \n-// contact\n+// up\n \n-\n const testSchema =  `\n type Query {\n     hi: String\n     resolutions: [Resolution]\n"
                }
            ],
            "date": 1676579990962,
            "name": "Commit-0",
            "content": "import ResolutionsSchema from '../../api/resolutions/Resolutions.graphql';"
        }
    ]
}