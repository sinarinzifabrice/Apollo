{
    "sourceFile": "imports/api/resolutions/resolvers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 101,
            "patches": [
                {
                    "date": 1676663954434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1676664455285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,8 @@\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n-        hi() {\n-            return \"Hello Fabrice\";\n-        },\n         resolutions(){\n             return [\n                 {\n                     _id: \"sdfsdfgwer\",\n"
                },
                {
                    "date": 1676922875420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-\n+import { ResolutionsCollection } from \"./resolutions\";\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n"
                },
                {
                    "date": 1676922963042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n import { ResolutionsCollection } from \"./resolutions\";\n+\n+const res = ResolutionsCollection.find({}).fetch();\n+console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n"
                },
                {
                    "date": 1676923043206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,10 @@\n import { ResolutionsCollection } from \"./resolutions\";\n \n+ResolutionsCollection.insert({\n+    name: \"Test Res\"\n+})\n+\n const res = ResolutionsCollection.find({}).fetch();\n console.log(res);\n //it's where we put the query \n //like Meteor.method\n"
                },
                {
                    "date": 1676923166346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,24 +3,16 @@\n ResolutionsCollection.insert({\n     name: \"Test Res\"\n })\n \n-const res = ResolutionsCollection.find({}).fetch();\n-console.log(res);\n+// const res = ResolutionsCollection.find({}).fetch();\n+// console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n+        \n         resolutions(){\n-            return [\n-                {\n-                    _id: \"sdfsdfgwer\",\n-                    name: \"Get stuff done\"\n-                },\n-                {\n-                    _id: \"rrrrrrrrrrrrrr\",\n-                    name: \"gains weight\"\n-                }\n-            ];\n+            return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676923246342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { ResolutionsCollection } from \"./resolutions\";\n \n ResolutionsCollection.insert({\n-    name: \"Test Res\"\n+    name: \"Test now\"\n })\n \n // const res = ResolutionsCollection.find({}).fetch();\n // console.log(res);\n"
                },
                {
                    "date": 1676923259593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { ResolutionsCollection } from \"./resolutions\";\n \n-ResolutionsCollection.insert({\n-    name: \"Test now\"\n-})\n+// ResolutionsCollection.insert({\n+//     name: \"Test now\"\n+// })\n \n // const res = ResolutionsCollection.find({}).fetch();\n // console.log(res);\n //it's where we put the query \n"
                },
                {
                    "date": 1676923313484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n // ResolutionsCollection.insert({\n //     name: \"Test now\"\n // })\n \n-// const res = ResolutionsCollection.find({}).fetch();\n-// console.log(res);\n+const res = ResolutionsCollection.find({}).fetch();\n+console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n"
                },
                {
                    "date": 1676925591613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,27 @@\n import { ResolutionsCollection } from \"./resolutions\";\n \n-// ResolutionsCollection.insert({\n-//     name: \"Test now\"\n-// })\n+ResolutionsCollection.insert({\n+    name: \"Test Res\"\n+})\n \n-const res = ResolutionsCollection.find({}).fetch();\n-console.log(res);\n+// const res = ResolutionsCollection.find({}).fetch();\n+// console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n         \n         resolutions(){\n-            return ResolutionsCollection.find({}).fetch();\n+            return [\n+                {\n+                    _id: \"sdfsdfgwer\",\n+                    name: \"Get stuff done\"\n+                },\n+                {\n+                    _id: \"rrrrrrrrrrrrrr\",\n+                    name: \"gains weight\"\n+                }\n+            ];\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676927891445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { ResolutionsCollection } from \"./resolutions\";\n \n-ResolutionsCollection.insert({\n-    name: \"Test Res\"\n-})\n+// ResolutionsCollection.insert({\n+//     name: \"Test Res\"\n+// })\n \n // const res = ResolutionsCollection.find({}).fetch();\n // console.log(res);\n //it's where we put the query \n"
                },
                {
                    "date": 1676927913255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n // ResolutionsCollection.insert({\n //     name: \"Test Res\"\n // })\n \n-// const res = ResolutionsCollection.find({}).fetch();\n-// console.log(res);\n+const res = ResolutionsCollection.find({}).fetch();\n+console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n"
                },
                {
                    "date": 1676927964081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n-        \n+        console.log(\"sdfvsdf\");\n         resolutions(){\n             return [\n                 {\n                     _id: \"sdfsdfgwer\",\n"
                },
                {
                    "date": 1676927976605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n-        console.log(\"sdfvsdf\");\n+        console.log(\"sdfvsdf\")\n         resolutions(){\n             return [\n                 {\n                     _id: \"sdfsdfgwer\",\n"
                },
                {
                    "date": 1676927993974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,11 @@\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n-        console.log(\"sdfvsdf\")\n+        \n         resolutions(){\n+            console.log(\"sdfvsdf\");\n             return [\n                 {\n                     _id: \"sdfsdfgwer\",\n                     name: \"Get stuff done\"\n"
                },
                {
                    "date": 1676928043430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n export default {\n     Query: {\n         \n         resolutions(){\n+            ResolutionsCollection.find({}).fetch();\n             console.log(\"sdfvsdf\");\n             return [\n                 {\n                     _id: \"sdfsdfgwer\",\n"
                },
                {
                    "date": 1676928097067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n export default {\n     Query: {\n         \n         resolutions(){\n-            ResolutionsCollection.find({}).fetch();\n+            // ResolutionsCollection.find({}).fetch();\n             console.log(\"sdfvsdf\");\n             return [\n                 {\n                     _id: \"sdfsdfgwer\",\n"
                },
                {
                    "date": 1676929209517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,17 +13,8 @@\n         \n         resolutions(){\n             // ResolutionsCollection.find({}).fetch();\n             console.log(\"sdfvsdf\");\n-            return [\n-                {\n-                    _id: \"sdfsdfgwer\",\n-                    name: \"Get stuff done\"\n-                },\n-                {\n-                    _id: \"rrrrrrrrrrrrrr\",\n-                    name: \"gains weight\"\n-                }\n-            ];\n+            return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676988566268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,17 +4,19 @@\n //     name: \"Test Res\"\n // })\n \n const res = ResolutionsCollection.find({}).fetch();\n+\n console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n         \n         resolutions(){\n+            \n             // ResolutionsCollection.find({}).fetch();\n-            console.log(\"sdfvsdf\");\n+            console.log(getLinks: async () => ResolutionsCollection.find({}).fetch());\n             return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676988584472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         \n         resolutions(){\n             \n             // ResolutionsCollection.find({}).fetch();\n-            console.log(getLinks: async () => ResolutionsCollection.find({}).fetch());\n+            console.log(async () => ResolutionsCollection.find({}).fetch());\n             return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676988703781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n         resolutions(){\n             \n             // ResolutionsCollection.find({}).fetch();\n             console.log(async () => ResolutionsCollection.find({}).fetch());\n+            console.log(\"hvliu\");\n             return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676989087626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n         \n         resolutions(){\n             \n             // ResolutionsCollection.find({}).fetch();\n-            console.log(async () => ResolutionsCollection.find({}).fetch());\n+            // console.log(async () => ResolutionsCollection.find({}).fetch());\n             console.log(\"hvliu\");\n-            return ResolutionsCollection.find({}).fetch();\n+            return getLinks: async () => ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676990773553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,8 @@\n             \n             // ResolutionsCollection.find({}).fetch();\n             // console.log(async () => ResolutionsCollection.find({}).fetch());\n             console.log(\"hvliu\");\n-            return getLinks: async () => ResolutionsCollection.find({}).fetch();\n+            getLinks: async () => ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676991831580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,8 @@\n             \n             // ResolutionsCollection.find({}).fetch();\n             // console.log(async () => ResolutionsCollection.find({}).fetch());\n             console.log(\"hvliu\");\n-            getLinks: async () => ResolutionsCollection.find({}).fetch();\n+            return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676991883222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n         resolutions(){\n             \n             // ResolutionsCollection.find({}).fetch();\n             // console.log(async () => ResolutionsCollection.find({}).fetch());\n+            console.log(ResolutionsCollection.find({}).fetch());\n             console.log(\"hvliu\");\n             return ResolutionsCollection.find({}).fetch();\n         }\n     }\n"
                },
                {
                    "date": 1676991997412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,16 @@\n         resolutions(){\n             \n             // ResolutionsCollection.find({}).fetch();\n             // console.log(async () => ResolutionsCollection.find({}).fetch());\n-            console.log(ResolutionsCollection.find({}).fetch());\n+            try {\n+                const result = ResolutionsCollection.find({}).fetch();\n+                // Utilisez le résultat ici\n+                console.log(result);\n+              } catch (error) {\n+                // Gérer l'erreur ici\n+                console.error(\"Erreur lors de la récupération des données:\", error);\n+              }\n             console.log(\"hvliu\");\n             return ResolutionsCollection.find({}).fetch();\n         }\n     }\n"
                },
                {
                    "date": 1676993478174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n             \n             // ResolutionsCollection.find({}).fetch();\n             // console.log(async () => ResolutionsCollection.find({}).fetch());\n             try {\n-                const result = ResolutionsCollection.find({}).fetch();\n+                const result = async() => ResolutionsCollection.find({}).fetch();\n                 // Utilisez le résultat ici\n                 console.log(result);\n               } catch (error) {\n                 // Gérer l'erreur ici\n"
                },
                {
                    "date": 1676993558984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n             \n             // ResolutionsCollection.find({}).fetch();\n             // console.log(async () => ResolutionsCollection.find({}).fetch());\n             try {\n-                const result = async() => ResolutionsCollection.find({}).fetch();\n+                const result = async() => ResolutionsCollection.find().fetch();\n                 // Utilisez le résultat ici\n                 console.log(result);\n               } catch (error) {\n                 // Gérer l'erreur ici\n"
                },
                {
                    "date": 1676993814001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,16 +13,15 @@\n     Query: {\n         \n         resolutions(){\n             \n-            // ResolutionsCollection.find({}).fetch();\n-            // console.log(async () => ResolutionsCollection.find({}).fetch());\n+            \n             try {\n                 const result = async() => ResolutionsCollection.find().fetch();\n-                // Utilisez le résultat ici\n+                \n                 console.log(result);\n               } catch (error) {\n-                // Gérer l'erreur ici\n+                \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n             return ResolutionsCollection.find({}).fetch();\n"
                },
                {
                    "date": 1676993842687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         resolutions(){\n             \n             \n             try {\n-                const result = async() => ResolutionsCollection.find().fetch();\n+                const result = async() => ResolutionsCollection.find({}).fetch();\n                 \n                 console.log(result);\n               } catch (error) {\n                 \n"
                },
                {
                    "date": 1676993913052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,8 @@\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n-            return ResolutionsCollection.find({}).fetch();\n+            return async() => ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676996461799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,20 +11,20 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        resolutions(){\n+        async resolutions(_,args){\n             \n             \n             try {\n-                const result = async() => ResolutionsCollection.find({}).fetch();\n+                const result = await Resolutions.ResolutionsCollection.find({}).fetch();\n                 \n                 console.log(result);\n               } catch (error) {\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n-            return async() => ResolutionsCollection.find({}).fetch();\n+            return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676996554615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         async resolutions(_,args){\n             \n             \n             try {\n-                const result = await Resolutions.ResolutionsCollection.find({}).fetch();\n+                const result = await ResolutionsCollection.find({}).fetch();\n                 \n                 console.log(result);\n               } catch (error) {\n                 \n"
                },
                {
                    "date": 1676996695282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async resolutions(_,args){\n+        async resolutions{\n             \n             \n             try {\n                 const result = await ResolutionsCollection.find({}).fetch();\n"
                },
                {
                    "date": 1676996706001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async resolutions{\n+         resolutions{\n             \n             \n             try {\n                 const result = await ResolutionsCollection.find({}).fetch();\n"
                },
                {
                    "date": 1676996720336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-         resolutions{\n+        async resolutions(_,args){\n             \n             \n             try {\n                 const result = await ResolutionsCollection.find({}).fetch();\n"
                },
                {
                    "date": 1676996730810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async resolutions(_,args){\n+        async resolutions(args){\n             \n             \n             try {\n                 const result = await ResolutionsCollection.find({}).fetch();\n"
                },
                {
                    "date": 1676996745008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async resolutions(args){\n+        async resolutions(){\n             \n             \n             try {\n                 const result = await ResolutionsCollection.find({}).fetch();\n"
                },
                {
                    "date": 1676996779432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,8 @@\n     Query: {\n         \n         async resolutions(){\n             \n-            \n             try {\n                 const result = await ResolutionsCollection.find({}).fetch();\n                 \n                 console.log(result);\n"
                },
                {
                    "date": 1676996926056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,13 +12,13 @@\n export default {\n     Query: {\n         \n         async resolutions(){\n-            \n+\n             try {\n                 const result = await ResolutionsCollection.find({}).fetch();\n                 \n-                console.log(result);\n+                console.log(\"le resultat \"+result);\n               } catch (error) {\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n"
                },
                {
                    "date": 1676996949035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         \n         async resolutions(){\n \n             try {\n-                const result = await ResolutionsCollection.find({}).fetch();\n+                const result = ResolutionsCollection.find({}).fetch();\n                 \n                 console.log(\"le resultat \"+result);\n               } catch (error) {\n                 \n"
                },
                {
                    "date": 1676997144755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n // })\n \n const res = ResolutionsCollection.find({}).fetch();\n \n+\n console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n"
                },
                {
                    "date": 1676997783095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-import { ResolutionsCollection } from \"./resolutions\";\n+import { ResolutionsCollection, ContactsCollection } from \"./resolutions\";\n \n // ResolutionsCollection.insert({\n //     name: \"Test Res\"\n // })\n \n const res = ResolutionsCollection.find({}).fetch();\n+const contact = ContactsCollection.find({}).fetch();\n \n-\n console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n@@ -15,9 +15,9 @@\n         \n         async resolutions(){\n \n             try {\n-                const result = ResolutionsCollection.find({}).fetch();\n+                const result = ContactsCollection.find({}).fetch();\n                 \n                 console.log(\"le resultat \"+result);\n               } catch (error) {\n                 \n"
                },
                {
                    "date": 1676997807264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n \n const res = ResolutionsCollection.find({}).fetch();\n const contact = ContactsCollection.find({}).fetch();\n \n+\n console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n"
                },
                {
                    "date": 1676997821981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const res = ResolutionsCollection.find({}).fetch();\n const contact = ContactsCollection.find({}).fetch();\n \n \n-console.log(res);\n+console.log(contact);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n"
                },
                {
                    "date": 1676997915904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,8 @@\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n-            return ResolutionsCollection.find({}).fetch();\n+            return ContactsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676997979272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n \n const res = ResolutionsCollection.find({}).fetch();\n const contact = ContactsCollection.find({}).fetch();\n \n-\n console.log(contact);\n //it's where we put the query \n //like Meteor.method\n export default {\n"
                },
                {
                    "date": 1676998185691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async resolutions(){\n+        async resolutions(_,args){\n \n             try {\n                 const result = ContactsCollection.find({}).fetch();\n                 \n"
                },
                {
                    "date": 1676998207224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         \n         async resolutions(_,args){\n \n             try {\n-                const result = ContactsCollection.find({}).fetch();\n+                const result = await ContactsCollection.find({}).fetch();\n                 \n                 console.log(\"le resultat \"+result);\n               } catch (error) {\n                 \n"
                },
                {
                    "date": 1676998226732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async resolutions(_,args){\n+        async resolutions(){\n \n             try {\n                 const result = await ContactsCollection.find({}).fetch();\n                 \n"
                },
                {
                    "date": 1676998247484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         \n         async resolutions(){\n \n             try {\n-                const result = await ContactsCollection.find({}).fetch();\n+                const result = ResolutionsCollection.find({}).fetch();\n                 \n                 console.log(\"le resultat \"+result);\n               } catch (error) {\n                 \n"
                },
                {
                    "date": 1676998259493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n const res = ResolutionsCollection.find({}).fetch();\n const contact = ContactsCollection.find({}).fetch();\n \n-console.log(contact);\n+console.log(res);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n"
                },
                {
                    "date": 1676998321655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,8 @@\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n-            return ContactsCollection.find({}).fetch();\n+            return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676998428442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,25 +6,25 @@\n \n const res = ResolutionsCollection.find({}).fetch();\n const contact = ContactsCollection.find({}).fetch();\n \n-console.log(res);\n+console.log(contact);\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n         \n         async resolutions(){\n \n             try {\n-                const result = ResolutionsCollection.find({}).fetch();\n+                const result = ContactsCollection.find({}).fetch();\n                 \n                 console.log(\"le resultat \"+result);\n               } catch (error) {\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n-            return ResolutionsCollection.find({}).fetch();\n+            return ContactsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676999199284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async resolutions(){\n+        async contacts(){\n \n             try {\n                 const result = ContactsCollection.find({}).fetch();\n                 \n@@ -24,7 +24,21 @@\n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n             return ContactsCollection.find({}).fetch();\n+        },\n+\n+        async resolutions(){\n+\n+            try {\n+                const result = ResolutionsCollection.find({}).fetch();\n+                \n+                console.log(\"le resultat \"+result);\n+              } catch (error) {\n+                \n+                console.error(\"Erreur lors de la récupération des données:\", error);\n+              }\n+            console.log(\"hvliu\");\n+            return ResolutionsCollection.find({}).fetch();\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677001764285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n //like Meteor.method\n export default {\n     Query: {\n         \n-        async contacts(){\n+        async resolutions(){\n \n             try {\n                 const result = ContactsCollection.find({}).fetch();\n                 \n@@ -24,21 +24,9 @@\n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n             return ContactsCollection.find({}).fetch();\n-        },\n+        }\n \n-        async resolutions(){\n-\n-            try {\n-                const result = ResolutionsCollection.find({}).fetch();\n-                \n-                console.log(\"le resultat \"+result);\n-              } catch (error) {\n-                \n-                console.error(\"Erreur lors de la récupération des données:\", error);\n-              }\n-            console.log(\"hvliu\");\n-            return ResolutionsCollection.find({}).fetch();\n-        }\n+        \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677002327619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,22 @@\n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n             return ContactsCollection.find({}).fetch();\n-        }\n+        },\n \n+        async contacts(){\n+\n+            try {\n+                const result = ResolutionsCollection.find({}).fetch();\n+                \n+                console.log(\"le resolver \"+result);\n+              } catch (error) {\n+                \n+                console.error(\"Erreur lors de la récupération des données:\", error);\n+              }\n+            console.log(\"resolver contact\");\n+            return ResolutionsCollection.find({}).fetch();\n+        },\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677002366472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,11 @@\n \n         async contacts(){\n \n             try {\n-                const result = ResolutionsCollection.find({}).fetch();\n+                const resu = ResolutionsCollection.find({}).fetch();\n                 \n-                console.log(\"le resolver \"+result);\n+                console.log(\"le resolver \"+resu);\n               } catch (error) {\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n"
                },
                {
                    "date": 1677076753215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,31 +15,31 @@\n         \n         async resolutions(){\n \n             try {\n-                const result = ContactsCollection.find({}).fetch();\n+                const result = ResolutionsCollection.find({}).fetch();\n                 \n                 console.log(\"le resultat \"+result);\n               } catch (error) {\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"hvliu\");\n-            return ContactsCollection.find({}).fetch();\n+            return ResolutionsCollection.find({}).fetch();\n         },\n \n         async contacts(){\n \n             try {\n-                const resu = ResolutionsCollection.find({}).fetch();\n+                const resu = ContactsCollection.find({}).fetch();\n                 \n                 console.log(\"le resolver \"+resu);\n               } catch (error) {\n                 \n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"resolver contact\");\n-            return ResolutionsCollection.find({}).fetch();\n+            return ContactsCollection.find({}).fetch();\n         },\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677083523126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,7 +39,24 @@\n               }\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n         },\n+\n+        Mutation: {\n+            createContact() {\n+                const contactId = ResolutionsCollection.insert({\n+                    // firstname: \"String\"\n+                    // lastname: \"String\"\n+                    // email: \"String\"\n+                    // phone: \"String\"\n+                    // city: \"String\"\n+                    // province: \"String\"\n+                    // zipcode: \"String\"\n+                    // country: \"String\"\n+                    // comment1: \"String\" \n+                    // comment2: \"String\"\n+                })\n+            }\n+        }\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677084982577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,20 +42,20 @@\n         },\n \n         Mutation: {\n             createContact() {\n-                const contactId = ResolutionsCollection.insert({\n-                    // firstname: \"String\"\n-                    // lastname: \"String\"\n-                    // email: \"String\"\n-                    // phone: \"String\"\n-                    // city: \"String\"\n-                    // province: \"String\"\n-                    // zipcode: \"String\"\n-                    // country: \"String\"\n-                    // comment1: \"String\" \n-                    // comment2: \"String\"\n-                })\n+                // const contactId = ResolutionsCollection.insert({\n+                //     firstname: \"String\"\n+                //     lastname: \"String\"\n+                //     email: \"String\"\n+                //     phone: \"String\"\n+                //     city: \"String\"\n+                //     province: \"String\"\n+                //     zipcode: \"String\"\n+                //     country: \"String\"\n+                //     comment1: \"String\" \n+                //     comment2: \"String\"\n+                // })\n             }\n         }\n         \n     }\n"
                },
                {
                    "date": 1677085595147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,25 +38,24 @@\n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n-        },\n+        }\n \n-        Mutation: {\n-            createContact() {\n-                // const contactId = ResolutionsCollection.insert({\n-                //     firstname: \"String\"\n-                //     lastname: \"String\"\n-                //     email: \"String\"\n-                //     phone: \"String\"\n-                //     city: \"String\"\n-                //     province: \"String\"\n-                //     zipcode: \"String\"\n-                //     country: \"String\"\n-                //     comment1: \"String\" \n-                //     comment2: \"String\"\n-                // })\n-            }\n+    },\n+    Mutation: {\n+        createContact() {\n+            // const contactId = ResolutionsCollection.insert({\n+            //     firstname: \"String\"\n+            //     lastname: \"String\"\n+            //     email: \"String\"\n+            //     phone: \"String\"\n+            //     city: \"String\"\n+            //     province: \"String\"\n+            //     zipcode: \"String\"\n+            //     country: \"String\"\n+            //     comment1: \"String\" \n+            //     comment2: \"String\"\n+            // })\n         }\n-        \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677091113589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n \n     },\n     Mutation: {\n         createContact() {\n+            console.log(\"insert contact\");\n             // const contactId = ResolutionsCollection.insert({\n             //     firstname: \"String\"\n             //     lastname: \"String\"\n             //     email: \"String\"\n"
                },
                {
                    "date": 1677091703970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         }\n \n     },\n     Mutation: {\n-        createContact() {\n+        async createContact() {\n             console.log(\"insert contact\");\n             // const contactId = ResolutionsCollection.insert({\n             //     firstname: \"String\"\n             //     lastname: \"String\"\n"
                },
                {
                    "date": 1677091769301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,16 @@\n \n     },\n     Mutation: {\n         async createContact() {\n-            console.log(\"insert contact\");\n+            try {\n+                //const resu = ContactsCollection.find({}).fetch();\n+                \n+                console.log(\"insert contact\");\n+              } catch (error) {\n+                \n+                console.error(\"Erreur lors de la récupération des données:\", error);\n+              }\n             // const contactId = ResolutionsCollection.insert({\n             //     firstname: \"String\"\n             //     lastname: \"String\"\n             //     email: \"String\"\n"
                },
                {
                    "date": 1677091835828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         }\n \n     },\n     Mutation: {\n-        async createContact() {\n+        async createContact(_, args) {\n             try {\n                 //const resu = ContactsCollection.find({}).fetch();\n                 \n                 console.log(\"insert contact\");\n"
                },
                {
                    "date": 1677091879754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 \n                 console.log(\"insert contact\");\n               } catch (error) {\n                 \n-                console.error(\"Erreur lors de la récupération des données:\", error);\n+                console.error(\"Erreur l'insertion des données:\", error);\n               }\n             // const contactId = ResolutionsCollection.insert({\n             //     firstname: \"String\"\n             //     lastname: \"String\"\n"
                },
                {
                    "date": 1677092000724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n             return ContactsCollection.find({}).fetch();\n         }\n \n     },\n+    \n     Mutation: {\n         async createContact(_, args) {\n             try {\n                 //const resu = ContactsCollection.find({}).fetch();\n"
                },
                {
                    "date": 1677095049889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,30 +41,30 @@\n             return ContactsCollection.find({}).fetch();\n         }\n \n     },\n-    \n-    Mutation: {\n-        async createContact(_, args) {\n-            try {\n-                //const resu = ContactsCollection.find({}).fetch();\n+\n+    // Mutation: {\n+    //     async createContact(_, args) {\n+    //         try {\n+    //             //const resu = ContactsCollection.find({}).fetch();\n                 \n-                console.log(\"insert contact\");\n-              } catch (error) {\n+    //             console.log(\"insert contact\");\n+    //           } catch (error) {\n                 \n-                console.error(\"Erreur l'insertion des données:\", error);\n-              }\n-            // const contactId = ResolutionsCollection.insert({\n-            //     firstname: \"String\"\n-            //     lastname: \"String\"\n-            //     email: \"String\"\n-            //     phone: \"String\"\n-            //     city: \"String\"\n-            //     province: \"String\"\n-            //     zipcode: \"String\"\n-            //     country: \"String\"\n-            //     comment1: \"String\" \n-            //     comment2: \"String\"\n-            // })\n-        }\n-    }\n+    //             console.error(\"Erreur l'insertion des données:\", error);\n+    //           }\n+    //         // const contactId = ResolutionsCollection.insert({\n+    //         //     firstname: \"String\"\n+    //         //     lastname: \"String\"\n+    //         //     email: \"String\"\n+    //         //     phone: \"String\"\n+    //         //     city: \"String\"\n+    //         //     province: \"String\"\n+    //         //     zipcode: \"String\"\n+    //         //     country: \"String\"\n+    //         //     comment1: \"String\" \n+    //         //     comment2: \"String\"\n+    //         // })\n+    //     }\n+    // }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677096220105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,29 +42,29 @@\n         }\n \n     },\n \n-    // Mutation: {\n-    //     async createContact(_, args) {\n-    //         try {\n-    //             //const resu = ContactsCollection.find({}).fetch();\n+    Mutation: {\n+        async createContact(_, args) {\n+            try {\n+                //const resu = ContactsCollection.find({}).fetch();\n                 \n-    //             console.log(\"insert contact\");\n-    //           } catch (error) {\n+                console.log(\"insert contact\");\n+              } catch (error) {\n                 \n-    //             console.error(\"Erreur l'insertion des données:\", error);\n-    //           }\n-    //         // const contactId = ResolutionsCollection.insert({\n-    //         //     firstname: \"String\"\n-    //         //     lastname: \"String\"\n-    //         //     email: \"String\"\n-    //         //     phone: \"String\"\n-    //         //     city: \"String\"\n-    //         //     province: \"String\"\n-    //         //     zipcode: \"String\"\n-    //         //     country: \"String\"\n-    //         //     comment1: \"String\" \n-    //         //     comment2: \"String\"\n-    //         // })\n-    //     }\n-    // }\n+                console.error(\"Erreur l'insertion des données:\", error);\n+              }\n+            // const contactId = ResolutionsCollection.insert({\n+            //     firstname: \"String\"\n+            //     lastname: \"String\"\n+            //     email: \"String\"\n+            //     phone: \"String\"\n+            //     city: \"String\"\n+            //     province: \"String\"\n+            //     zipcode: \"String\"\n+            //     country: \"String\"\n+            //     comment1: \"String\" \n+            //     comment2: \"String\"\n+            // })\n+        }\n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677100307951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \n     },\n \n     Mutation: {\n-        async createContact(_, args) {\n+        async createContact(obj, args, context) {\n             try {\n                 //const resu = ContactsCollection.find({}).fetch();\n                 \n                 console.log(\"insert contact\");\n"
                },
                {
                    "date": 1677100396372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         async createContact(obj, args, context) {\n             try {\n                 //const resu = ContactsCollection.find({}).fetch();\n                 \n-                console.log(\"insert contact\");\n+                console.log(\"insert contact\"+ args);\n               } catch (error) {\n                 \n                 console.error(\"Erreur l'insertion des données:\", error);\n               }\n"
                },
                {
                    "date": 1677100595543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,13 +43,13 @@\n \n     },\n \n     Mutation: {\n-        async createContact(obj, args, context) {\n+        async createContact(obj, { firstname} , context) {\n             try {\n                 //const resu = ContactsCollection.find({}).fetch();\n                 \n-                console.log(\"insert contact\"+ args);\n+                console.log(\"insert contact\"+ firstname);\n               } catch (error) {\n                 \n                 console.error(\"Erreur l'insertion des données:\", error);\n               }\n"
                },
                {
                    "date": 1677100662178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         async createContact(obj, { firstname} , context) {\n             try {\n                 //const resu = ContactsCollection.find({}).fetch();\n                 \n-                console.log(\"insert contact\"+ firstname);\n+                console.log(\"insert contact \"+ firstname);\n               } catch (error) {\n                 \n                 console.error(\"Erreur l'insertion des données:\", error);\n               }\n"
                },
                {
                    "date": 1677101317380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,26 +45,20 @@\n \n     Mutation: {\n         async createContact(obj, { firstname} , context) {\n             try {\n-                //const resu = ContactsCollection.find({}).fetch();\n                 \n-                console.log(\"insert contact \"+ firstname);\n-              } catch (error) {\n+                    console.log(\"insert contact \"+ firstname);\n+\n+                    const contactId = ResolutionsCollection.insert({\n+                        firstname: firstname\n+                    });\n+                    return ContactsCollection.findOne(contactId);\n+            }\n+            catch (error) {\n                 \n-                console.error(\"Erreur l'insertion des données:\", error);\n-              }\n-            // const contactId = ResolutionsCollection.insert({\n-            //     firstname: \"String\"\n-            //     lastname: \"String\"\n-            //     email: \"String\"\n-            //     phone: \"String\"\n-            //     city: \"String\"\n-            //     province: \"String\"\n-            //     zipcode: \"String\"\n-            //     country: \"String\"\n-            //     comment1: \"String\" \n-            //     comment2: \"String\"\n-            // })\n+                    console.error(\"Erreur l'insertion des données:\", error);\n+            }\n+            \n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677101436403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n             try {\n                 \n                     console.log(\"insert contact \"+ firstname);\n \n-                    const contactId = ResolutionsCollection.insert({\n+                    const contactId = ContactsCollection.insert({\n                         firstname: firstname\n                     });\n                     return ContactsCollection.findOne(contactId);\n             }\n"
                },
                {
                    "date": 1677509948195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,7 +58,23 @@\n                 \n                     console.error(\"Erreur l'insertion des données:\", error);\n             }\n             \n-        }\n+        },\n+\n+        async deleteContact(obj, { contactId} , context) {\n+          try {\n+              \n+                  console.log(\"id contact \"+ contactId);\n+\n+                  const contactId = ContactsCollection.remove(_id)\n+                  return ContactsCollection.findOne(contactId);\n+          }\n+          catch (error) {\n+              \n+                  console.error(\"Erreur suppression du contact:\", error);\n+          }\n+          \n+      }\n+\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677512790951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n           try {\n               \n                   console.log(\"id contact \"+ contactId);\n \n-                  const contactId = ContactsCollection.remove(_id)\n+                  const contactId = ContactsCollection.remove(contactId)\n                   return ContactsCollection.findOne(contactId);\n           }\n           catch (error) {\n               \n"
                },
                {
                    "date": 1677517576657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,15 +60,15 @@\n             }\n             \n         },\n \n-        async deleteContact(obj, { contactId} , context) {\n+        async deleteContact(obj, { contactId}) {\n           try {\n               \n                   console.log(\"id contact \"+ contactId);\n \n-                  const contactId = ContactsCollection.remove(contactId)\n-                  return ContactsCollection.findOne(contactId);\n+                  const contactId = ContactsCollection.findByIdAndRemove(contactId);\n+                  return contactId;\n           }\n           catch (error) {\n               \n                   console.error(\"Erreur suppression du contact:\", error);\n"
                },
                {
                    "date": 1677517799704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,15 +60,15 @@\n             }\n             \n         },\n \n-        async deleteContact(obj, { contactId}) {\n+        async deleteContact(obj, {_id}) {\n           try {\n               \n-                  console.log(\"id contact \"+ contactId);\n+                  console.log(\"id contact \"+ _id);\n \n-                  const contactId = ContactsCollection.findByIdAndRemove(contactId);\n-                  return contactId;\n+                  const contactId = ContactsCollection.findByIdAndRemove(_id);\n+                  return ContactsCollection.findByIdAndRemove(_id);;\n           }\n           catch (error) {\n               \n                   console.error(\"Erreur suppression du contact:\", error);\n"
                },
                {
                    "date": 1677518284892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,10 @@\n           try {\n               \n                   console.log(\"id contact \"+ _id);\n \n-                  const contactId = ContactsCollection.findByIdAndRemove(_id);\n-                  return ContactsCollection.findByIdAndRemove(_id);;\n+                  const contactId = ContactsCollection.Remove(_id);\n+                  return ContactsCollection.Remove(_id);;\n           }\n           catch (error) {\n               \n                   console.error(\"Erreur suppression du contact:\", error);\n"
                },
                {
                    "date": 1677518640780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n               \n                   console.log(\"id contact \"+ _id);\n \n                   const contactId = ContactsCollection.Remove(_id);\n-                  return ContactsCollection.Remove(_id);;\n+                  return await ContactsCollection.Remove(_id);;\n           }\n           catch (error) {\n               \n                   console.error(\"Erreur suppression du contact:\", error);\n"
                },
                {
                    "date": 1677518655796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n               \n                   console.log(\"id contact \"+ _id);\n \n                   const contactId = ContactsCollection.Remove(_id);\n-                  return await ContactsCollection.Remove(_id);;\n+                  return await ContactsCollection.Remove(_id);\n           }\n           catch (error) {\n               \n                   console.error(\"Erreur suppression du contact:\", error);\n"
                },
                {
                    "date": 1677519244667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,10 @@\n           try {\n               \n                   console.log(\"id contact \"+ _id);\n \n-                  const contactId = ContactsCollection.Remove(_id);\n-                  return await ContactsCollection.Remove(_id);\n+                  const contactId = ContactsCollection.remove(_id);\n+                  return await ContactsCollection.remove(_id);\n           }\n           catch (error) {\n               \n                   console.error(\"Erreur suppression du contact:\", error);\n"
                },
                {
                    "date": 1678734197541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,15 +43,16 @@\n \n     },\n \n     Mutation: {\n-        async createContact(obj, { firstname} , context) {\n+        async createContact(obj, { firstname, lastname} , context) {\n             try {\n                 \n                     console.log(\"insert contact \"+ firstname);\n \n                     const contactId = ContactsCollection.insert({\n-                        firstname: firstname\n+                        firstname: firstname,\n+                        lastname: lastname\n                     });\n                     return ContactsCollection.findOne(contactId);\n             }\n             catch (error) {\n"
                },
                {
                    "date": 1678736024400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,16 +43,16 @@\n \n     },\n \n     Mutation: {\n-        async createContact(obj, { firstname, lastname} , context) {\n+        async createContact(obj, { firstname} , context) {\n             try {\n                 \n                     console.log(\"insert contact \"+ firstname);\n \n                     const contactId = ContactsCollection.insert({\n-                        firstname: firstname,\n-                        lastname: lastname\n+                        firstname: firstname\n+                        \n                     });\n                     return ContactsCollection.findOne(contactId);\n             }\n             catch (error) {\n"
                },
                {
                    "date": 1678736772745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,16 +43,16 @@\n \n     },\n \n     Mutation: {\n-        async createContact(obj, { firstname} , context) {\n+        async createContact(obj, { firstname, lastname} , context) {\n             try {\n                 \n                     console.log(\"insert contact \"+ firstname);\n \n                     const contactId = ContactsCollection.insert({\n-                        firstname: firstname\n-                        \n+                        firstname: firstname,\n+                        lastname: lastname\n                     });\n                     return ContactsCollection.findOne(contactId);\n             }\n             catch (error) {\n"
                },
                {
                    "date": 1678802640039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,16 +43,34 @@\n \n     },\n \n     Mutation: {\n-        async createContact(obj, { firstname, lastname} , context) {\n+        async createContact(obj, { \n+          firstname, \n+          lastname, \n+          email,\n+          phone,\n+          city,\n+          province,\n+          zipcode,\n+          country,\n+          comment1, \n+          comment2 } , context) {\n             try {\n                 \n                     console.log(\"insert contact \"+ firstname);\n \n                     const contactId = ContactsCollection.insert({\n                         firstname: firstname,\n-                        lastname: lastname\n+                        lastname: lastname,\n+                        email: email,\n+                        phone: phone,\n+                        city: city,\n+                        province: province,\n+                        zipcode: zipcode,\n+                        country: country,\n+                        comment1: comment1,\n+                        comment2: comment2\n                     });\n                     return ContactsCollection.findOne(contactId);\n             }\n             catch (error) {\n"
                },
                {
                    "date": 1678819828760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,14 @@\n             try {\n                 \n                     console.log(\"insert contact \"+ firstname);\n \n+                    // Vérifie si comment2 est undefined et le remplace par une chaîne vide\n+                    if (typeof comment2 === 'undefined') {\n+                      comment2 = '';\n+                    }\n+\n+\n                     const contactId = ContactsCollection.insert({\n                         firstname: firstname,\n                         lastname: lastname,\n                         email: email,\n"
                },
                {
                    "date": 1678821372437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,14 +58,36 @@\n             try {\n                 \n                     console.log(\"insert contact \"+ firstname);\n \n-                    // Vérifie si comment2 est undefined et le remplace par une chaîne vide\n+                    // Checks if firstname is undefined and replaces it with an empty string\n+                    if (typeof firstname === 'undefined') {\n+                      firstname = '';\n+                    }\n+\n+                    if (typeof lastname === 'undefined') {\n+                      lastname = '';\n+                    }\n+                    if (typeof city === 'undefined') {\n+                      city = '';\n+                    }\n+                    if (typeof province === 'undefined') {\n+                      province = '';\n+                    }\n+                    if (typeof zipcode === 'undefined') {\n+                      zipcode = '';\n+                    }\n+\n+                    if (typeof country === 'undefined') {\n+                      country = '';\n+                    }\n+                    if (typeof comment1 === 'undefined') {\n+                      comment1 = '';\n+                    }\n                     if (typeof comment2 === 'undefined') {\n                       comment2 = '';\n                     }\n \n-\n                     const contactId = ContactsCollection.insert({\n                         firstname: firstname,\n                         lastname: lastname,\n                         email: email,\n"
                },
                {
                    "date": 1679327155854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n const res = ResolutionsCollection.find({}).fetch();\n const contact = ContactsCollection.find({}).fetch();\n \n console.log(contact);\n+\n //it's where we put the query \n //like Meteor.method\n export default {\n     Query: {\n"
                },
                {
                    "date": 1679327485749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,25 @@\n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n-        }\n+        },\n \n+        async getcontact(id){\n+\n+          try {\n+              const resu = ContactsCollection.find({_id:id}).fetch();\n+              \n+              console.log(\"le contact est \"+resu);\n+            } catch (error) {\n+              \n+              console.error(\"Erreur lors de la récupération du contact:\", error);\n+            }\n+          console.log(\"donnée du contact\");\n+          return ContactsCollection.find({_id:id}).fetch();\n+      },\n+\n+\n     },\n \n     Mutation: {\n         async createContact(obj, { \n"
                },
                {
                    "date": 1679327578417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,20 +41,20 @@\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n         },\n \n-        async getcontact(id){\n+        async getcontact(obj, {_id}){\n \n           try {\n-              const resu = ContactsCollection.find({_id:id}).fetch();\n+              const resu = ContactsCollection.findOne({_id: _id});\n               \n               console.log(\"le contact est \"+resu);\n             } catch (error) {\n               \n               console.error(\"Erreur lors de la récupération du contact:\", error);\n             }\n           console.log(\"donnée du contact\");\n-          return ContactsCollection.find({_id:id}).fetch();\n+          return ContactsCollection.findOne({_id: _id});\n       },\n \n \n     },\n"
                },
                {
                    "date": 1679340077996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n         async getcontact(obj, {_id}){\n \n           try {\n               const resu = ContactsCollection.findOne({_id: _id});\n-              \n+              console.log(\"l'id est \"+_id);\n               console.log(\"le contact est \"+resu);\n             } catch (error) {\n               \n               console.error(\"Erreur lors de la récupération du contact:\", error);\n"
                },
                {
                    "date": 1679340106914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,13 +41,13 @@\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n         },\n \n-        async getcontact(obj, {_id}){\n+        async getcontact(obj, {id}){\n \n           try {\n-              const resu = ContactsCollection.findOne({_id: _id});\n-              console.log(\"l'id est \"+_id);\n+              const resu = ContactsCollection.findOne({_id: id});\n+              console.log(\"l'id est \"+ id);\n               console.log(\"le contact est \"+resu);\n             } catch (error) {\n               \n               console.error(\"Erreur lors de la récupération du contact:\", error);\n"
                },
                {
                    "date": 1679344899253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,25 +39,11 @@\n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n-        },\n+        }\n \n-        async getcontact(obj, {id}){\n \n-          try {\n-              const resu = ContactsCollection.findOne({_id: id});\n-              console.log(\"l'id est \"+ id);\n-              console.log(\"le contact est \"+resu);\n-            } catch (error) {\n-              \n-              console.error(\"Erreur lors de la récupération du contact:\", error);\n-            }\n-          console.log(\"donnée du contact\");\n-          return ContactsCollection.findOne({_id: _id});\n-      },\n-\n-\n     },\n \n     Mutation: {\n         async createContact(obj, { \n"
                },
                {
                    "date": 1679345437605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,11 +39,25 @@\n                 console.error(\"Erreur lors de la récupération des données:\", error);\n               }\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n-        }\n+        },\n \n+        async getcontacts(obj, {_id}){\n \n+          try {\n+              const resu = ContactsCollection.findOne(_id).fetch();\n+              console.log(\"l'id du contact  \"+_id);\n+              console.log(\"le contact est \"+resu);\n+            } catch (error) {\n+              \n+              console.error(\"Erreur lors de la récupération du contact:\", error);\n+            }\n+          console.log(\"renvoie du contact\");\n+          return ContactsCollection.findOne(_id).fetch();\n+      },\n+\n+\n     },\n \n     Mutation: {\n         async createContact(obj, { \n"
                },
                {
                    "date": 1679345466584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n             console.log(\"resolver contact\");\n             return ContactsCollection.find({}).fetch();\n         },\n \n-        async getcontacts(obj, {_id}){\n+        async getcontact(obj, {_id}){\n \n           try {\n               const resu = ContactsCollection.findOne(_id).fetch();\n               console.log(\"l'id du contact  \"+_id);\n"
                },
                {
                    "date": 1679345554207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,17 +44,17 @@\n \n         async getcontact(obj, {_id}){\n \n           try {\n-              const resu = ContactsCollection.findOne(_id).fetch();\n+              const resu = ContactsCollection.findOne(_id);\n               console.log(\"l'id du contact  \"+_id);\n               console.log(\"le contact est \"+resu);\n             } catch (error) {\n               \n               console.error(\"Erreur lors de la récupération du contact:\", error);\n             }\n           console.log(\"renvoie du contact\");\n-          return ContactsCollection.findOne(_id).fetch();\n+          return ContactsCollection.findOne(_id);\n       },\n \n \n     },\n"
                },
                {
                    "date": 1679410198397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,8 +136,49 @@\n               \n                   console.error(\"Erreur suppression du contact:\", error);\n           }\n           \n-      }\n+        },\n \n+        async updateContact(obj, {\n+          _id,\n+          firstname, \n+          lastname, \n+          email,\n+          phone,\n+          city,\n+          province,\n+          zipcode,\n+          country,\n+          comment1, \n+          comment2\n+        }, context) {\n+          try {\n+              \n+                  console.log(\"id contact \"+ _id);\n+                  console.log(\"id contact \"+ firstname);\n+                  const contactId = ContactsCollection.updateOne(\n+                    { _id: _id },\n+                    { $set: \n+                      { firstname: firstname,\n+                        lastname : lastname,\n+                        email: email,\n+                        phone: phone,\n+                        city: city,\n+                        province: province,\n+                        zipcode: zipcode,\n+                        country: country,\n+                        comment1: comment1, \n+                        comment2: comment2\n+                       } } \n+                  );\n+                  return await ContactsCollection.updateOne(_id);\n+          }\n+          catch (error) {\n+              \n+                  console.error(\"Erreur suppression du contact:\", error);\n+          }\n+          \n+        }\n+\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1679410442694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,10 +154,40 @@\n         }, context) {\n           try {\n               \n                   console.log(\"id contact \"+ _id);\n-                  console.log(\"id contact \"+ firstname);\n-                  const contactId = ContactsCollection.updateOne(\n+                  console.log(\"firstname  contact \"+ firstname);\n+\n+                  // Checks if firstname is undefined and replaces it with an empty string\n+                  if (typeof firstname === 'undefined') {\n+                    firstname = '';\n+                  }\n+\n+                  if (typeof lastname === 'undefined') {\n+                    lastname = '';\n+                  }\n+                  if (typeof city === 'undefined') {\n+                    city = '';\n+                  }\n+                  if (typeof province === 'undefined') {\n+                    province = '';\n+                  }\n+                  if (typeof zipcode === 'undefined') {\n+                    zipcode = '';\n+                  }\n+\n+                  if (typeof country === 'undefined') {\n+                    country = '';\n+                  }\n+                  if (typeof comment1 === 'undefined') {\n+                    comment1 = '';\n+                  }\n+                  if (typeof comment2 === 'undefined') {\n+                    comment2 = '';\n+                  }\n+\n+\n+                  const contact = ContactsCollection.updateOne(\n                     { _id: _id },\n                     { $set: \n                       { firstname: firstname,\n                         lastname : lastname,\n@@ -170,13 +200,27 @@\n                         comment1: comment1, \n                         comment2: comment2\n                        } } \n                   );\n-                  return await ContactsCollection.updateOne(_id);\n+                  return await ContactsCollection.updateOne(\n+                    { _id: _id },\n+                    { $set: \n+                      { firstname: firstname,\n+                        lastname : lastname,\n+                        email: email,\n+                        phone: phone,\n+                        city: city,\n+                        province: province,\n+                        zipcode: zipcode,\n+                        country: country,\n+                        comment1: comment1, \n+                        comment2: comment2\n+                       } } \n+                  );\n           }\n           catch (error) {\n               \n-                  console.error(\"Erreur suppression du contact:\", error);\n+                  console.error(\"Erreur de mise à jour du contact:\", error);\n           }\n           \n         }\n \n"
                },
                {
                    "date": 1679433211418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,9 +185,9 @@\n                     comment2 = '';\n                   }\n \n \n-                  const contact = ContactsCollection.updateOne(\n+                  const contact = ContactsCollection.update(\n                     { _id: _id },\n                     { $set: \n                       { firstname: firstname,\n                         lastname : lastname,\n@@ -200,9 +200,9 @@\n                         comment1: comment1, \n                         comment2: comment2\n                        } } \n                   );\n-                  return await ContactsCollection.updateOne(\n+                  return await ContactsCollection.update(\n                     { _id: _id },\n                     { $set: \n                       { firstname: firstname,\n                         lastname : lastname,\n"
                }
            ],
            "date": 1676663954434,
            "name": "Commit-0",
            "content": "\n//it's where we put the query \n//like Meteor.method\nexport default {\n    Query: {\n        hi() {\n            return \"Hello Fabrice\";\n        },\n        resolutions(){\n            return [\n                {\n                    _id: \"sdfsdfgwer\",\n                    name: \"Get stuff done\"\n                },\n                {\n                    _id: \"rrrrrrrrrrrrrr\",\n                    name: \"gains weight\"\n                }\n            ];\n        }\n    }\n}"
        }
    ]
}